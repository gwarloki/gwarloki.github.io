{"title":"开源WAF调研之产品选型-Nginx+GeoIP2","uid":"8f0f57e3d20bdf89f372a3376a26a3ed","slug":"Nginx+GeoIP2","date":"2022-08-10T08:40:59.440Z","updated":"2022-10-27T01:14:56.812Z","comments":true,"path":"api/articles/Nginx+GeoIP2.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159445/a-tunnel-8k-secret-passage-wallpapers-159445-3938-223551.png","content":"<h2 id=\"0x00前言\"><a href=\"#0x00前言\" class=\"headerlink\" title=\"0x00前言\"></a>0x00前言</h2><p>描述: 为了实现根据访问者访问我们的网站时根据其IP显示其所属地，也为获取不同地区访问者的IP地址等相关信息为目的，所以在搜索引擎中查找解决方案，在网络上查询到如下几种方案<code>Nginx+GeoIP2、使用收费 IP 识别接口、DNS 根据地域解析</code>，然后经过多方面考究，最终还是使用Nginx+GeoIP2解决方案。</p>\n<p><strong>三种解决方案优缺点</strong></p>\n<ul>\n<li><p>Nginx + GeoIP2<br>可以拿到请求 IP 的国家和城市信息然后进行各种个性化 Nginx 配置<br>可以将请求 IP 的地理位置通过 php-fpm 传递 php 程序<br>定时更新 MaxMind 免费数据库（<code>GeoLite2-Country.mmdb + GeoLite2-City.mmdb</code>）完成完美闭环<br>maxmind 公司 2002 年成立至今，靠谱</p>\n</li>\n<li><p> 使用 IP 识别接口：稳定的需要收费（也不能保证 100% 高可用：限频、响应时间、接口异常等因素），免费的无法保证稳定性，接口远远没有将 GeoLite 数据放在本地稳定</p>\n</li>\n<li><p> DNS 根据地域解析：cloudflare 收费略贵，国内 cloudxns 已关闭免费服务（免费的东西说变就变，论 planB 的重要性）</p>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>TIPS:</strong> MaxMind GeoIP 已经被弃用了一段时间。对于您最新的地理定位需求，请改用 MaxMind GeoIP2（或免费版本的 GeoLite2）。<br><strong>TIPS:</strong> 当前网上大部分Nginx + GeoIP 的教程都是 GeoIP 老版本的已经不适用了当前最新版本的Nginx二进制编译安装，你可参照本章更快的进行实践使用。<br><strong>TIPS:</strong> GeoUP 依赖 MaxMind 的 IP 数据，需要频繁更新，所以我们在安装配置后也实现了使用<code>crontab</code>服务，针对其国家城市数据库进行自动化脚本定时更新配置。</p></blockquote>\n<h2 id=\"0x01安装部署\"><a href=\"#0x01安装部署\" class=\"headerlink\" title=\"0x01安装部署\"></a>0x01安装部署</h2><h3 id=\"环境说明\"><a href=\"#环境说明\" class=\"headerlink\" title=\"环境说明\"></a>环境说明</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 宿主机系统\n$ uname -a\n113-Ubuntu SMP Thu Feb 3 18:43:29 UTC 2022 x86_64 x86_64 x86_64 GNU&#x2F;Linux\n$ cat &#x2F;etc&#x2F;issue.net\nUbuntu 20.04.1 LTS\n\n# 应用软件\nnginx-1.22.0.tar.gz\nlibmaxminddb-1.6.0.tar.gz\nngx_http_geoip2_module-3.4.tar.gz\nGeoLite2-City_20220802.tar.gz\nGeoLite2-Country_20220802.tar.gz</code></pre>\n\n<p><strong>系统加固</strong>符合等保2.0要求，<a href=\"https://github.com/WeiyiGeek/SecOpsDev/blob/master/OS-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux/Ubuntu/Ubuntu-InitializeSecurity.sh\">加固脚本</a></p>\n<p><strong>资源下载</strong><a href=\"http://share.weiyigeek.top/d/36158960-50338508-7c5982?p=2088\">下载地址:</a>（访问密码：2088）</p>\n<h3 id=\"libmaxminddb下载\"><a href=\"#libmaxminddb下载\" class=\"headerlink\" title=\"libmaxminddb下载\"></a>libmaxminddb下载</h3><p>描述: 首先安装 libmaxminddb 库，其提供了一个用于读取<code>MaxMind DB</code>文件的C库，包括来自MaxMind的GeoIP2数据库。这是一种自定义二进制格式，旨在促进 IP 地址的快速查找，同时允许在与地址关联的数据类型方面具有极大的灵活性。</p>\n<p>项目地址: <a href=\"https://github.com/maxmind/libmaxminddb\">https://github.com/maxmind/libmaxminddb</a><br>下载构建:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget -c https:&#x2F;&#x2F;github.com&#x2F;maxmind&#x2F;libmaxminddb&#x2F;releases&#x2F;download&#x2F;1.6.0&#x2F;libmaxminddb-1.6.0.tar.gz\ntar -zxvf libmaxminddb-1.6.0.tar.gz &amp;&amp; cd libmaxminddb-1.6.0\n.&#x2F;configure\nmake &amp;&amp; make install\ntee -a &#x2F;etc&#x2F;ld.so.conf.d&#x2F;libc.conf &lt;&lt;&#39;EOF&#39;\n# libc default configuration\n&#x2F;usr&#x2F;local&#x2F;lib\nEOF\nsudo ldconfig</code></pre>\n<p>或使用apt命令进行安装:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ sudo apt update  \n$ sudo apt install libmaxminddb0 libmaxminddb-dev mmdb-bin geoipupdate</code></pre>\n<p>上面安装的软件包是：</p>\n<ul>\n<li><p>libmaxminddb0 libmaxminddb-dev – MaxMind 地理定位数据库</p>\n</li>\n<li><p>mmdb-bin – 二进制。从命令行调用的程序。使用此命令手动定位 IP。</p>\n</li>\n<li><p>geoipupdate – 帮助配置和更新 GeoIP2 &#x2F; GeoLite2 的软件包。</p>\n</li>\n</ul>\n<h3 id=\"ngx-http-geoip2-module下载\"><a href=\"#ngx-http-geoip2-module下载\" class=\"headerlink\" title=\"ngx_http_geoip2_module下载\"></a>ngx_http_geoip2_module下载</h3><p>描述: 下载 ngx_http_geoip2_module 使用基于客户端 IP（默认）或特定变量（同时支持 IPv4 和 IPv6）的 <code>maxmind geoip2</code> 数据库中的值创建变量，该模块现在支持nginx流，并且可以以与http模块相同的方式使用。</p>\n<p>项目地址: <a href=\"https://github.com/leev/ngx_http_geoip2_module/\">https://github.com/leev/ngx_http_geoip2_module/</a><br>下载构建:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget -c https:&#x2F;&#x2F;github.com&#x2F;leev&#x2F;ngx_http_geoip2_module&#x2F;archive&#x2F;refs&#x2F;tags&#x2F;3.4.tar.gz -O &#x2F;usr&#x2F;local&#x2F;src&#x2F;ngx_http_geoip2_module-3.4.tar.gz\ntar -zxf ngx_http_geoip2_module-3.4.tar.gz &amp;&amp; ls ngx_http_geoip2_module-3.4&#x2F;\n  # config  LICENSE  ngx_http_geoip2_module.c  ngx_stream_geoip2_module.c  README.md</code></pre>\n<p><strong>Geoip2 模块语法</strong><br>语法示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># HTTP\nhttp &#123;\n  ...\n  geoip2 &#x2F;etc&#x2F;maxmind-country.mmdb &#123;\n    auto_reload 5m;\n    $geoip2_data_country_code default&#x3D;US source&#x3D;$variable_with_ip country iso_code;\n &#125;\n&#125;\n\n# Stream\nstream &#123;\n  ...\n  geoip2 &#x2F;etc&#x2F;maxmind-country.mmdb &#123;\n    auto_reload 5m;\n    $geoip2_data_country_code default&#x3D;US source&#x3D;$remote_addr country iso_code;\n  &#125;\n  ...\n&#125;</code></pre>\n<p>参数说明:</p>\n<ul>\n<li><p><code>auto_reload &lt;interval&gt;</code>: 启用自动重新加载将使 nginx 以指定的时间间隔检查数据库的修改时间，如果发生更改则重新加载。</p>\n</li>\n<li><p><code>$variable_name [default=&lt;value] [source=$variable_with_ip] path ...</code>: 如果没有指定【default】参数，则如果未找到该变量将为空，如果没有指定【source】参数 $remote_addr 将用于执行查找。</p>\n</li>\n</ul>\n<h4 id=\"mmdblookup-命令\"><a href=\"#mmdblookup-命令\" class=\"headerlink\" title=\"mmdblookup 命令\"></a>mmdblookup 命令</h4><p>描述: 在前面编译安装<code>libmaxminddb</code>库后，我们便可以使用 mmdblookup 工具，查找所需数据的路径（例如：国家&#x2F;地区名称），以JSON格式返回的，其中continent（洲） 、country (国家) 、registered_country（已注册的国家）对象包含了<code>code/geoname_id/names</code>键：</p>\n<p>GeoLite2-Country.mmdb 库只带有 country 相关数据样本输出</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ mmdblookup --file .&#x2F;GeoLite2-Country.mmdb --ip 223.6.6.6\n&#123;\n  &quot;continent&quot;:\n    &#123;\n      &quot;code&quot;:\n        &quot;AS&quot; &lt;utf8_string&gt;\n      &quot;geoname_id&quot;:\n        6255147 &lt;uint32&gt;\n      &quot;names&quot;:\n        &#123;\n          &quot;de&quot;:\n            &quot;Asien&quot; &lt;utf8_string&gt;\n          &quot;en&quot;:\n            &quot;Asia&quot; &lt;utf8_string&gt;\n          &quot;es&quot;:\n            &quot;Asia&quot; &lt;utf8_string&gt;\n          &quot;fr&quot;:\n            &quot;Asie&quot; &lt;utf8_string&gt;\n          &quot;ja&quot;:\n            &quot;アジア&quot; &lt;utf8_string&gt;\n          &quot;pt-BR&quot;:\n            &quot;Ásia&quot; &lt;utf8_string&gt;\n          &quot;ru&quot;:\n            &quot;Азия&quot; &lt;utf8_string&gt;\n          &quot;zh-CN&quot;:\n            &quot;亚洲&quot; &lt;utf8_string&gt;\n        &#125;\n    &#125;\n  &quot;country&quot;:\n    &#123;\n      &quot;geoname_id&quot;:\n        1814991 &lt;uint32&gt;\n      &quot;iso_code&quot;:\n        &quot;CN&quot; &lt;utf8_string&gt;\n      &quot;names&quot;:\n        &#123;\n          &quot;de&quot;:\n            &quot;China&quot; &lt;utf8_string&gt;\n          &quot;en&quot;:\n            &quot;China&quot; &lt;utf8_string&gt;\n          &quot;es&quot;:\n            &quot;China&quot; &lt;utf8_string&gt;\n          &quot;fr&quot;:\n            &quot;Chine&quot; &lt;utf8_string&gt;\n          &quot;ja&quot;:\n            &quot;中国&quot; &lt;utf8_string&gt;\n          &quot;pt-BR&quot;:\n            &quot;China&quot; &lt;utf8_string&gt;\n          &quot;ru&quot;:\n            &quot;Китай&quot; &lt;utf8_string&gt;\n          &quot;zh-CN&quot;:\n            &quot;中国&quot; &lt;utf8_string&gt;\n        &#125;\n    &#125;\n  &quot;registered_country&quot;:\n    &#123;\n      &quot;geoname_id&quot;:\n        1814991 &lt;uint32&gt;\n      &quot;iso_code&quot;:\n        &quot;CN&quot; &lt;utf8_string&gt;\n      &quot;names&quot;:\n        &#123;\n          &quot;de&quot;:\n            &quot;China&quot; &lt;utf8_string&gt;\n          &quot;en&quot;:\n            &quot;China&quot; &lt;utf8_string&gt;\n          &quot;es&quot;:\n            &quot;China&quot; &lt;utf8_string&gt;\n          &quot;fr&quot;:\n            &quot;Chine&quot; &lt;utf8_string&gt;\n          &quot;ja&quot;:\n            &quot;中国&quot; &lt;utf8_string&gt;\n          &quot;pt-BR&quot;:\n            &quot;China&quot; &lt;utf8_string&gt;\n          &quot;ru&quot;:\n            &quot;Китай&quot; &lt;utf8_string&gt;\n          &quot;zh-CN&quot;:\n            &quot;中国&quot; &lt;utf8_string&gt;\n        &#125;\n    &#125;\n&#125;</code></pre>\n<p>GeoLite2-City.mmdb 库带有 country City 相关数据样本输出 (一般推荐使用该库)</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ mmdblookup --file .&#x2F;GeoLite2-City.mmdb --ip 223.6.6.6\n &#123;\n    &quot;city&quot;:\n      &#123;\n        &quot;geoname_id&quot;:\n          1808926 &lt;uint32&gt;\n        &quot;names&quot;:\n          &#123;\n            &quot;de&quot;:\n              &quot;Hangzhou&quot; &lt;utf8_string&gt;\n            &quot;en&quot;:\n              &quot;Hangzhou&quot; &lt;utf8_string&gt;\n            &quot;es&quot;:\n              &quot;Hangzhou&quot; &lt;utf8_string&gt;\n            &quot;fr&quot;:\n              &quot;Hangzhou&quot; &lt;utf8_string&gt;\n            &quot;ja&quot;:\n              &quot;杭州市&quot; &lt;utf8_string&gt;\n            &quot;pt-BR&quot;:\n              &quot;Hangzhou&quot; &lt;utf8_string&gt;\n            &quot;ru&quot;:\n              &quot;Ханчжоу&quot; &lt;utf8_string&gt;\n            &quot;zh-CN&quot;:\n              &quot;杭州&quot; &lt;utf8_string&gt;\n          &#125;\n      &#125;\n    &quot;continent&quot;:\n      &#123;\n        &quot;code&quot;:\n          &quot;AS&quot; &lt;utf8_string&gt;\n        &quot;geoname_id&quot;:\n          6255147 &lt;uint32&gt;\n        &quot;names&quot;:\n          &#123;\n            &quot;de&quot;:\n              &quot;Asien&quot; &lt;utf8_string&gt;\n            &quot;en&quot;:\n              &quot;Asia&quot; &lt;utf8_string&gt;\n            &quot;es&quot;:\n              &quot;Asia&quot; &lt;utf8_string&gt;\n            &quot;fr&quot;:\n              &quot;Asie&quot; &lt;utf8_string&gt;\n            &quot;ja&quot;:\n              &quot;アジア&quot; &lt;utf8_string&gt;\n            &quot;pt-BR&quot;:\n              &quot;Ásia&quot; &lt;utf8_string&gt;\n            &quot;ru&quot;:\n              &quot;Азия&quot; &lt;utf8_string&gt;\n            &quot;zh-CN&quot;:\n              &quot;亚洲&quot; &lt;utf8_string&gt;\n          &#125;\n      &#125;\n    &quot;country&quot;:\n      &#123;\n        &quot;geoname_id&quot;:\n          1814991 &lt;uint32&gt;\n        &quot;iso_code&quot;:\n          &quot;CN&quot; &lt;utf8_string&gt;\n        &quot;names&quot;:\n          &#123;\n            &quot;de&quot;:\n              &quot;China&quot; &lt;utf8_string&gt;\n            &quot;en&quot;:\n              &quot;China&quot; &lt;utf8_string&gt;\n            &quot;es&quot;:\n              &quot;China&quot; &lt;utf8_string&gt;\n            &quot;fr&quot;:\n              &quot;Chine&quot; &lt;utf8_string&gt;\n            &quot;ja&quot;:\n              &quot;中国&quot; &lt;utf8_string&gt;\n            &quot;pt-BR&quot;:\n              &quot;China&quot; &lt;utf8_string&gt;\n            &quot;ru&quot;:\n              &quot;Китай&quot; &lt;utf8_string&gt;\n            &quot;zh-CN&quot;:\n              &quot;中国&quot; &lt;utf8_string&gt;\n          &#125;\n      &#125;\n    &quot;location&quot;:\n      &#123;\n        &quot;accuracy_radius&quot;:\n          1000 &lt;uint16&gt;\n        &quot;latitude&quot;:\n          30.299400 &lt;double&gt;\n        &quot;longitude&quot;:\n          120.161200 &lt;double&gt;\n        &quot;time_zone&quot;:\n          &quot;Asia&#x2F;Shanghai&quot; &lt;utf8_string&gt;\n      &#125;\n    &quot;registered_country&quot;:\n      &#123;\n        &quot;geoname_id&quot;:\n          1814991 &lt;uint32&gt;\n        &quot;iso_code&quot;:\n          &quot;CN&quot; &lt;utf8_string&gt;\n        &quot;names&quot;:\n          &#123;\n            &quot;de&quot;:\n              &quot;China&quot; &lt;utf8_string&gt;\n            &quot;en&quot;:\n              &quot;China&quot; &lt;utf8_string&gt;\n            &quot;es&quot;:\n              &quot;China&quot; &lt;utf8_string&gt;\n            &quot;fr&quot;:\n              &quot;Chine&quot; &lt;utf8_string&gt;\n            &quot;ja&quot;:\n              &quot;中国&quot; &lt;utf8_string&gt;\n            &quot;pt-BR&quot;:\n              &quot;China&quot; &lt;utf8_string&gt;\n            &quot;ru&quot;:\n              &quot;Китай&quot; &lt;utf8_string&gt;\n            &quot;zh-CN&quot;:\n              &quot;中国&quot; &lt;utf8_string&gt;\n          &#125;\n      &#125;\n    &quot;subdivisions&quot;:\n      [\n        &#123;\n          &quot;geoname_id&quot;:\n            1784764 &lt;uint32&gt;\n          &quot;iso_code&quot;:\n            &quot;ZJ&quot; &lt;utf8_string&gt;\n          &quot;names&quot;:\n            &#123;\n              &quot;en&quot;:\n                &quot;Zhejiang&quot; &lt;utf8_string&gt;\n              &quot;fr&quot;:\n                &quot;Province de Zhejiang&quot; &lt;utf8_string&gt;\n              &quot;zh-CN&quot;:\n                &quot;浙江省&quot; &lt;utf8_string&gt;\n            &#125;\n        &#125;\n      ]\n  &#125;</code></pre>\n<p>GeoLite2-Country.mmdb 与 GeoLite2-Country.mmdb 对比</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># - 国家 .&#x2F;GeoLite2-Country.mmdb 库\n# 如果此时我只想获取 country 的名称可以这样。\n$ mmdblookup --file .&#x2F;GeoLite2-Country.mmdb --ip 223.6.6.6 country names zh-CN\n  &quot;中国&quot; &lt;utf8_string&gt;\n# 当然如果你想获取国家的 iso_code 也是同样的。\n$ mmdblookup --file .&#x2F;GeoLite2-Country.mmdb --ip 223.6.6.6 country iso_code\n  &quot;CN&quot; &lt;utf8_string&gt;\n\n# - 国家、城市库 .&#x2F;GeoLite2-Country.mmdb 库\n$ mmdblookup --file .&#x2F;GeoLite2-City.mmdb --ip 223.6.6.6 country names zh-CN\n  &quot;中国&quot; &lt;utf8_string&gt;\n$ mmdblookup --file .&#x2F;GeoLite2-City.mmdb --ip 223.6.6.6 country iso_code\n  &quot;CN&quot; &lt;utf8_string&gt;\n$ mmdblookup --file .&#x2F;GeoLite2-City.mmdb --ip 223.6.6.6 continent names zh-CN\n  &quot;亚洲&quot; &lt;utf8_string&gt;\n$ mmdblookup --file .&#x2F;GeoLite2-City.mmdb --ip 223.6.6.6 subdivisions 0 names zh-CN\n  &quot;浙江省&quot; &lt;utf8_string&gt;\n$ mmdblookup --file .&#x2F;GeoLite2-City.mmdb --ip 223.6.6.6 subdivisions 0 names iso_code\n  &quot;ZJ&quot; &lt;utf8_string&gt;\n$ mmdblookup --file .&#x2F;GeoLite2-City.mmdb --ip 223.6.6.6 city names zh-CN\n  &quot;杭州&quot; &lt;utf8_string&gt;\n$ mmdblookup --file .&#x2F;GeoLite2-City.mmdb --ip 223.6.6.6 location longitude # 经度  \n  120.161200 &lt;double&gt;\n$ mmdblookup --file .&#x2F;GeoLite2-City.mmdb --ip 223.6.6.6 location latitude  # 纬度\n  30.299400  &lt;double&gt;\n$ mmdblookup --file .&#x2F;GeoLite2-City.mmdb --ip 223.6.6.6 location time_zone # 时区\n  &quot;Asia&#x2F;Shanghai&quot; &lt;utf8_string&gt;</code></pre>\n<p>上述的两个示例我们可以将其转换为 geoip2 模块定义的nginx变量</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\"># 如只需要国家信息建议使用该库\ngeoip2 &#x2F;usr&#x2F;local&#x2F;GeoIP2&#x2F;GeoLite2-Country.mmdb &#123;\n  $geoip2_data_country &quot;default&#x3D;China&quot; source&#x3D;$remote_addr country names en\n&#125;\n\n# 如需要获取国家以及省份信息建议使用该库，此处暂不演示使用，在后续实践中再进行介绍和使用。\ngeoip2 &#x2F;usr&#x2F;local&#x2F;GeoIP2&#x2F;GeoLite2-City.mmdb &#123;\n  $geoip2_data_country &quot;default&#x3D;中国&quot; source&#x3D;$remote_addr country names zh-CN;  # 中国\n  $geoip2_data_country_code country iso_code;                  # CN\n  $geoip2_data_country_continent continent names zh-CN;        # 亚洲\n  $geoip2_data_country_continent_code continent code;          # AS\n  $geoip2_data_province_name subdivisions 0 names zh-CN;       # 浙江省\n  $geoip2_data_province_isocode subdivisions 0 names iso_code; # &quot;ZJ&quot;\n  $geoip2_data_city city names zh-CN;                         # 杭州\n  $geoip2_data_city_longitude location longitude;              # 120.161200\n  $geoip2_data_city_latitude location latitude;                # 30.299400\n  $geoip2_data_city_time_zone location time_zone;             # &quot;Asia&#x2F;Shanghai&quot;\n&#125;</code></pre>\n<p>温馨提示: 当请求来自受信任的地址时，将使用“X-Forwarded-For”请求标头字段中的地址, 并且设置 <code>geoip2_proxy_recursive &lt; on | off &gt;</code> 指令。</p>\n<ul>\n<li><p>如果递归搜索被禁用，那么将使用“X-Forwarded-For”中发送的最后一个地址，而不是与一个受信任地址匹配的原始客户端地址。</p>\n</li>\n<li><p>如果启用了递归搜索，那么将使用“X-Forwarded-For”中发送的最后一个非信任地址，而不是与可信地址之一匹配的原始客户端地址。</p>\n</li>\n</ul>\n<p>模块使用参考地址：<a href=\"https://github.com/leev/ngx_http_geoip2_module/#example-usage\">https://github.com/leev/ngx_http_geoip2_module/#example-usage</a></p>\n<h3 id=\"Geoip2-模块编译动态链接库\"><a href=\"#Geoip2-模块编译动态链接库\" class=\"headerlink\" title=\"Geoip2 模块编译动态链接库\"></a>Geoip2 模块编译动态链接库</h3><p>描述: 有可能此时你通过源码编译方式安装 Nginx 了 ，那如何加入新的Nginx模块呢?</p>\n<p>答: 那就是重新编译 Nginx 即可，我们不需要执行<code>make install</code>重新安装 Nginx 具体操作如下所示。</p>\n<p>温馨提示: 如果你没有Nginx二进制安装环境，可以访问【<a href=\"http://mp.weixin.qq.com/s?__biz=MzIwNDA3ODg3OQ==&mid=2648000486&idx=1&sn=271ab896c0170fbe1b3e7cd00fbf631e&chksm=8ee44d96b993c480bc089c90d1ea2575a916fe8d0ea50f005272a8e0252f81811cb7db8635d5&scene=21#wechat_redirect\">运维实践-最新Nginx二进制构建编译lua-nginx-module动态链接Lua脚本访问Redis数据库读取静态资源隐式展现</a>】文章，并按照其流程进行二进制编译构建Nginx当前最新的稳定版本 1.22.0</p>\n<p>Step 1.执行<code>nginx -v</code>获取原编译构建的参数。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nginx version: nginx&#x2F;1.22.0\nbuilt by gcc 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1)\nbuilt with OpenSSL 1.1.1q  5 Jul 2022\nTLS SNI support enabled\nconfigure arguments: --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx --with-pcre&#x3D;..&#x2F;pcre-8.45 ......  --with-ld-opt&#x3D;-Wl,--as-needed,-O1,--sort-common</code></pre>\n\n<p>Step 2.此处补充一点，你完全可按照自身需求使用<code>--add-module</code>进行静态链接库安装，或者使用<code>--add-dynamic-module</code>进行动态链接库安装。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 动态链接库安装模块 （绝对或者相对路径）\n--add-dynamic-module&#x3D;..&#x2F;ngx_http_geoip2_module-3.4\n--add-dynamic-module&#x3D;&#x2F;usr&#x2F;local&#x2F;src&#x2F;ngx_http_geoip2_module-3.4\n\n# 静态链接库生成模块\n--add-module&#x3D;..&#x2F;ngx_http_geoip2_module-3.4</code></pre>\n\n\n<p>Step 3.将步骤1获取的参数加入到<code>./configure</code>, 并在末尾添加上<code>--add-dynamic-module=/usr/local/src/ngx_http_geoip2_module-3.4</code>, 以重新构建支持 geoip2 模块的 nginx 二进制文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd &#x2F;usr&#x2F;local&#x2F;src&#x2F;nginx-1.22.0&#x2F;\n\n# 预编译参数\n.&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx --user&#x3D;nginx --group&#x3D;nginx --with-pcre&#x3D;..&#x2F;pcre-8.45 --with-zlib&#x3D;..&#x2F;zlib-1.2.12 --with-openssl&#x3D;..&#x2F;openssl-1.1.1q --sbin-path&#x3D;&#x2F;usr&#x2F;sbin&#x2F;nginx --conf-path&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;nginx.conf --pid-path&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;nginx.pid --error-log-path&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;error.log --http-log-path&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log --lock-path&#x3D;&#x2F;var&#x2F;run&#x2F;nginx.lock --modules-path&#x3D;&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;modules --http-client-body-temp-path&#x3D;&#x2F;var&#x2F;cache&#x2F;nginx&#x2F;client_temp --http-proxy-temp-path&#x3D;&#x2F;var&#x2F;cache&#x2F;nginx&#x2F;proxy_temp --http-fastcgi-temp-path&#x3D;&#x2F;var&#x2F;cache&#x2F;nginx&#x2F;fastcgi_temp --http-uwsgi-temp-path&#x3D;&#x2F;var&#x2F;cache&#x2F;nginx&#x2F;uwsgi_temp --http-scgi-temp-path&#x3D;&#x2F;var&#x2F;cache&#x2F;nginx&#x2F;scgi_temp --with-threads --with-http_sub_module --with-http_v2_module --with-http_auth_request_module --with-http_realip_module --with-http_secure_link_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_ssl_module --with-http_slice_module --with-http_stub_status_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-stream_geoip_module --with-mail --with-mail_ssl_module --with-http_addition_module --with-http_random_index_module --with-compat --with-file-aio --with-cc-opt&#x3D;&#39;-Os -fomit-frame-pointer -g&#39; --with-ld-opt&#x3D;-Wl,-rpath,&#x2F;usr&#x2F;local&#x2F;luajit&#x2F;lib,--as-needed,-O1,--sort-common --add-module&#x3D;&#x2F;usr&#x2F;local&#x2F;src&#x2F;ngx_devel_kit-0.3.1 --add-module&#x3D;&#x2F;usr&#x2F;local&#x2F;src&#x2F;lua-nginx-module-0.10.21 --add-dynamic-module&#x3D;&#x2F;usr&#x2F;local&#x2F;src&#x2F;echo-nginx-module-0.62 --add-dynamic-module&#x3D;&#x2F;usr&#x2F;local&#x2F;src&#x2F;ngx_http_geoip2_module-3.4\n\n# 编译构建\nmake\n\n# 编译后将会在objs目录生成动态链接库，我们需复制到 &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;modules\n$ ls objs&#x2F;*.so\n  objs&#x2F;ngx_http_geoip2_module.so  objs&#x2F;ngx_stream_geoip2_module.so\n$ cp -a objs&#x2F;*.so &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;modules\n$ ls &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;modules\nngx_http_echo_module.so  ngx_http_geoip2_module.so  ngx_stream_geoip2_module.so\n\n# 然后使用objs目录中生成的 nginx 二进制文件覆盖 &#x2F;usr&#x2F;sbin&#x2F;nginx\n$ cp -a objs&#x2F;nginx &#x2F;usr&#x2F;sbin&#x2F;nginx\n$ make upgrade \n\n# 最后执行此命令验证安装是否成功\nnginx -V</code></pre>\n\n<h3 id=\"GeoLite2-数据库下载\"><a href=\"#GeoLite2-数据库下载\" class=\"headerlink\" title=\"GeoLite2 数据库下载\"></a>GeoLite2 数据库下载</h3><p>描述: Nginx 的 <code>ngx_*_geoip2_module</code> 模块依赖于 GeoLite2 数据库, 免费的 GeoLite2 数据库可从 Maxminds 网站获得（需要注册），GeoLite2 数据库基于 IP 地址的数据库和 Web 服务，提供有关地理位置、人口统计和用户以及匿名者的数据。</p>\n<p>如果你想下载与更新 GeoLite2 数据库,您需要拥有 MaxMind 帐户 ID 和许可证密钥, 并且当我们在 nginx 中使用则该 GeoIP2 模块，在我们请求时Nginx时根据IP地址来识别来源国家城市，但是我们需要提前下载载该数据库.</p>\n<p>简单流程: 首先访问 <code>Maxminds</code> 官网，然后注册登陆到用户后台，创建并获取 <code>License Key</code>, 最后下载 GeoLite2 数据库该压缩包，里面包含的是二进制mmdb格式的库文件。</p>\n<p>Maxminds 官网地址: <a href=\"https://maxmind.com/\">https://maxmind.com</a><br>GeoIP2 Web 服务演示（每天25次限额）：<a href=\"https://www.maxmind.com/en/geoip2-precision-demo?ip_address=223.6.6.6\">https://www.maxmind.com/en/geoip2-precision-demo?ip_address=223.6.6.6</a><br>Locate My IP Address : <a href=\"https://www.maxmind.com/en/locate-my-ip-address\">https://www.maxmind.com/en/locate-my-ip-address</a></p>\n<p>如果无法登录官网或者你不想注册登陆，也可以下载博主已经从官网下载好的 GeoIP2 数据库。</p>\n<h3 id=\"GeoLite2-数据库自动更新\"><a href=\"#GeoLite2-数据库自动更新\" class=\"headerlink\" title=\"GeoLite2 数据库自动更新\"></a>GeoLite2 数据库自动更新</h3><p>描述: 为了保证数据库中国家与城市的准确性，我们需要设置cron定时任务来更新MaxMind提供的<code>GeoLite2-Country.mmdb</code>或者<code>GeoLite2-City.mmdb</code>数据库, 以保证其数据库保持最新。</p>\n<p> <strong>操作流程</strong></p>\n<ul>\n<li><p>Step 1.使用apt命令帮助配置和更新 GeoIP2 &#x2F; GeoLite2 的软件包。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">apt install -y geoipupdate</code></pre>\n</li>\n<li><p>Step 2.使用文本编辑器打开并编辑位于 <code>/etc/GeoIP.conf</code> 的 <code>MaxMind GeoIP conf</code> 文件, 使用上述步骤获取的 AccountID 和 LicenseKey 字段信息填入其文件中, 之后便可执行进行地理位置数据库，操作后如下图所示</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ tee &#x2F;etc&#x2F;GeoIP.conf &lt;&lt;&#39;EOF&#39;\nAccountID 696302\nLicenseKey ycm3xq02oE7QXMOw\nEditionIDs GeoLite2-Country GeoLite2-City\nDatabaseDirectory &#x2F;usr&#x2F;local&#x2F;GeoIP2\nEOF\n\nls -alh &#x2F;usr&#x2F;local&#x2F;GeoIP2  # 手动更新前\ngeoipupdate --stack-trace\nls -alh &#x2F;usr&#x2F;local&#x2F;GeoIP2  # 手动更新后</code></pre>\n\n<ul>\n<li>Step 3.为了方便运维管理我们可以创建定时任务自动更新，提高工作效率。</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 查询执行文件绝对路径\n$ which geoipupdate\n&#x2F;usr&#x2F;bin&#x2F;geoipupdate\n\n# 每周天的凌晨更新数据库\n$ crontab -e\n0 * * * 6 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;geoipupdate &gt; &#x2F;var&#x2F;log&#x2F;geoipupdate.log 2&gt;&amp;1</code></pre>\n<p>官网更新参考地址: <a href=\"https://dev.maxmind.com/geoip/updating-databases?lang=en\">https://dev.maxmind.com/geoip/updating-databases?lang=en</a>.</p>\n<h2 id=\"0x02实践\"><a href=\"#0x02实践\" class=\"headerlink\" title=\"0x02实践\"></a>0x02实践</h2><h3 id=\"1-使用GeoIP2模块请求客户端的IP地址国家省份经纬度展示\"><a href=\"#1-使用GeoIP2模块请求客户端的IP地址国家省份经纬度展示\" class=\"headerlink\" title=\"1.使用GeoIP2模块请求客户端的IP地址国家省份经纬度展示\"></a>1.使用GeoIP2模块请求客户端的IP地址国家省份经纬度展示</h3><p>描述: 本次实践将根据请求者的国家显示中文或者英文的IP地址位置等相关信息在网页上，通过前面的学习，我们知道 geoip2 在检索有关 geoip 数据库的元数据时，其语法格式为 <code>$variable_name metadata &lt;field&gt;</code>,</p>\n<p><strong>实践流程</strong></p>\n<ul>\n<li>Step 1.编辑Nginx.conf主配置文件在 http 片段中，自定义定义访问日志格式后加入如下两个 geoip2 指令片段。<pre class=\"line-numbers language-none\"><code class=\"language-none\">http &#123;\n  .....\n  geoip2 &#x2F;usr&#x2F;local&#x2F;GeoIP2&#x2F;GeoLite2-Country.mmdb &#123;\n    # 启用自动重新加载将使 nginx 以指定的时间间隔检查数据库的修改时间，如果发生更改则重新加载。\n    auto_reload 7d;\n    $geoip2_country_code country names en;\n  &#125;\n  \n  geoip2 &#x2F;usr&#x2F;local&#x2F;GeoIP2&#x2F;GeoLite2-City.mmdb &#123;\n    # 中国IP访问都显示中文\n    $geoip2_data_country &quot;default&#x3D;中国&quot; source&#x3D;$remote_addr country names zh-CN;  # 中国\n    $geoip2_data_country_code country iso_code;                  # CN\n    $geoip2_data_country_continent continent names zh-CN;        # 亚洲\n    $geoip2_data_country_continent_code continent code;          # AS\n    $geoip2_data_province_name subdivisions 0 names zh-CN;       # 浙江省\n    $geoip2_data_province_isocode subdivisions 0 names iso_code; # &quot;ZJ&quot;\n    $geoip2_data_city city names zh-CN;                          # 杭州\n    $geoip2_data_city_longitude location longitude;              # 120.161200\n    $geoip2_data_city_latitude location latitude;                # 30.299400\n    $geoip2_data_city_time_zone location time_zone;              # &quot;Asia&#x2F;Shanghai&quot;\n  \n    # 中国以外的访问都是显示英文\n    $geoip2_data_country_en &quot;default&#x3D;United States&quot; source&#x3D;$remote_addr country names en;  # United States\n    $geoip2_data_country_code country iso_code;                     # US\n    $geoip2_data_country_continent_en continent names en;           # North America\n    $geoip2_data_country_continent_code continent code;             # NA\n    $geoip2_data_province_name_en subdivisions 0 names en;          # &quot;&quot;\n    $geoip2_data_province_isocode subdivisions 0 names iso_code;    # &quot;&quot;\n    $geoip2_data_city city names en;                                # 杭州\n    $geoip2_data_city_longitude location longitude;                 # 120.161200\n    $geoip2_data_city_latitude location latitude;                   # 30.299400\n    $geoip2_data_city_time_zone location time_zone;                 # &quot;Asia&#x2F;Shanghai&quot;\n  &#125;\n  ....\n  \n  map $geoip2_data_country_code $CN &#123;\n    CN yes;\n    TW yes;\n    HK yes;\n    MO yes;\n    default no;       \n  &#125;\n\n&#125;</code></pre></li>\n<li>Step 2.同样编辑<code>conf.d/demo.conf</code>, 此处使用虚拟主机头(demo.weiyigeek.top)做演, 加入如下指令片段，其主要作用是根据区其地区，使用中英文显示请求者IP地理位置信息。<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ vim conf.d&#x2F;demo.conf\nserver &#123;\n  ...\n  # 精准匹配\n  location &#x3D; &#x2F;api&#x2F;v1&#x2F;ip &#123;\n    # 当访问者IP来自 &#96;CN|TW|HK|MO&#96; 时将会以json的形式进行返回中文的IP地址信息。\n    if ( $geoip2_data_country_code ~* (CN|TW|HK|MO) )&#123;\n      rewrite (.*)  &#x2F;api&#x2F;v1&#x2F;ip&#x2F;cn last;\n    &#125;\n    rewrite (.*) &#x2F;api&#x2F;v1&#x2F;ip&#x2F;en last;\n  &#125;\n  \n  # 中文显示\n  location &#x2F;api&#x2F;v1&#x2F;ip&#x2F;cn &#123;\n    default_type application&#x2F;json;\n    return 200 &#39;&#123;&quot;ip&quot;:&quot;$remote_addr&quot;,&quot;country&quot;:&#123;&quot;name&quot;: &quot;$geoip2_data_country&quot;, &quot;iso_code&quot;:  &quot;$geoip2_data_country_code&quot;, &quot;continent&quot;: &quot;$geoip2_data_country_continent&quot;,&quot;continent_code&quot;: &quot;$geoip2_data_country_continent_code&quot;&#125;,&quot;province&quot;:&#123;&quot;name&quot;:&quot;$geoip2_data_province_name&quot;,&quot;iso_code&quot;:&quot;$geoip2_data_province_isocode&quot;&#125;,&quot;city&quot;:&#123;&quot;name&quot;:&quot;$geoip2_data_city&quot;,&quot;timezone&quot;:&quot;$geoip2_data_city_time_zone&quot;&#125;,&quot;location&quot;:&#123;&quot;longitude&quot;:&quot;$geoip2_data_city_longitude&quot;,&quot;latitude&quot;:&quot;$geoip2_data_city_latitude&quot;&#125;&#125;&#39;;\n  &#125;\n  \n  # 英文显示\n  location &#x2F;api&#x2F;v1&#x2F;ip&#x2F;en &#123;\n    default_type application&#x2F;json;\n    return 200 &#39;&#123;&quot;ip&quot;:&quot;$remote_addr&quot;,&quot;country&quot;:&#123;&quot;name&quot;: &quot;$geoip2_data_country_en&quot;, &quot;iso_code&quot;:  &quot;$geoip2_data_country_code&quot;, &quot;continent&quot;: &quot;$geoip2_data_country_continent_en&quot;,&quot;continent_code&quot;: &quot;$geoip2_data_country_continent_code&quot;&#125;,&quot;province&quot;:&#123;&quot;name&quot;:&quot;$geoip2_data_province_name_en&quot;,&quot;iso_code&quot;:&quot;$geoip2_data_province_isocode&quot;&#125;,&quot;city&quot;:&#123;&quot;name&quot;:&quot;$geoip2_data_city&quot;,&quot;timezone&quot;:&quot;$geoip2_data_city_time_zone&quot;&#125;,&quot;location&quot;:&#123;&quot;longitude&quot;:&quot;$geoip2_data_city_longitude&quot;,&quot;latitude&quot;:&quot;$geoip2_data_city_latitude&quot;&#125;&#125;&#39;;\n  &#125;\n  ....\n&#125;</code></pre></li>\n<li>Step 3.配置 nginx 核验与重载 nginx 服务, 此处使用不同的网络使用浏览器进行访问<code>https://demo.weiyigeek.top/api/v1/ip</code>验证, 结果如下图所示:。<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nginx -t &amp;&amp; nginx -s reload</code></pre>\n<img src=\"http://img.moses.wang/new/20221027091320.png\"></li>\n</ul>\n<h3 id=\"2-使用GeoIP2模块静止某一国家地区的IP地址访问网站\"><a href=\"#2-使用GeoIP2模块静止某一国家地区的IP地址访问网站\" class=\"headerlink\" title=\"2.使用GeoIP2模块静止某一国家地区的IP地址访问网站\"></a>2.使用GeoIP2模块静止某一国家地区的IP地址访问网站</h3><p>描述: 为了减少国外的攻击，我们可以将指定的地区IP访问进行放行，除此之外的全部拒绝。</p>\n<p><strong>实际流程:</strong></p>\n<ul>\n<li>Step 1.在 nginx.conf 中添加 map 指令并进行如下配置, 预定义了可以访问网站的地区。<pre class=\"line-numbers language-none\"><code class=\"language-none\">http &#123;\n\n....\n\nmap $geoip2_data_country_code $allow_visit &#123;  \n    CN yes;  \n    TW yes;  \n    HK yes;  \n    MO yes;  \n    default no;  \n\n&#125;\n\n....\n\n&#125;</code></pre>\n温馨提示:</li>\n</ul>\n<ol>\n<li><p>map 指令是由ngx_http_map_module模块提供的,默认情况下安装 nginx 都会安装该模块.</p>\n</li>\n<li><p>map 的主要作用是’创建自定义变量’,通过使用 nginx 的’内置’变量,去’匹配’某些特定规则; 如果匹配成功则设置某个值给自定义变量,而这个’自定义变量’又可以’用作他用’。</p>\n</li>\n</ol>\n<ul>\n<li>Step 2.在demo.conf配置文件中添加一个访问验证的示例。<pre class=\"line-numbers language-none\"><code class=\"language-none\"># 访问该页面如果$allow_visit变量不为yes则返回403页面,否则返回访问者的IP地区信息。\nlocation &#x2F;allow&#x2F;html &#123;\n  default_type text&#x2F;html;\n  if ($allow_visit !&#x3D; yes ) &#123;\n    return 403 &quot;IP [ $remote_addr ] 禁止访问! &lt;br&gt; $remote_addr - $geoip2_data_country - $geoip2_data_country_code - $geoip2_data_country_continent&quot;;\n  &#125; \n  return 200 &quot;欢迎IP为 [ $remote_addr ] 用户进行访问! &lt;br&gt; $remote_addr - $geoip2_data_country - $geoip2_data_country_code - $geoip2_data_country_continent&quot;;\n&#125;</code></pre></li>\n<li>Step 3.同样修改完成后，我们需要针对nginx配置核验与重新加载配置 <code>nginx -t &amp;&amp; nginx -s reload</code> （PS: 后续将不再提示了，想必大家都聊熟于心了）, ，之后分别使用工具进行访问验证，结果如下所示。<br><img src=\"http://img.moses.wang/new/20221027091428.png\"></li>\n</ul>\n<h3 id=\"3-使用GeoIP2模块实现不同国家访问进入不同目录页面\"><a href=\"#3-使用GeoIP2模块实现不同国家访问进入不同目录页面\" class=\"headerlink\" title=\"3.使用GeoIP2模块实现不同国家访问进入不同目录页面\"></a>3.使用GeoIP2模块实现不同国家访问进入不同目录页面</h3><p>描述: 在某些时刻我们可能会对不同地区来源访问的客户展示不同的页面，例如国内我就显示中文的页面，而新加坡我就显示英文的页面，这样一来就更加人性化一点。</p>\n<p><strong>示例演示</strong><br>在<code>/usr/local/nginx/html</code>目录中创建<code>ch/en</code>子目录，同时准备两个不同地区访问的测试页面:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">$ tree &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html  \n├── ch  \n│   └── index.html  \n├── en  \n│   └── index.html  \n  \n  \n\n$ cat ch&#x2F;index.html\n\n&lt;h1&gt;中文站点&lt;&#x2F;h1&gt;\n\n&lt;iframe src&#x3D;&quot;https:&#x2F;&#x2F;blog.weiyigeek.top&quot; frameborder&#x3D;&quot;0&quot; width&#x3D;&quot;500&quot;&gt;&lt;&#x2F;iframe&gt;</code></pre>\n<p>Nginx 配置中使用GeoIP处理访问请求。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http &#123;\n....\n  map $geoip2_data_country_code $lang_ch &#123;\n    CN yes;\n    TW yes;\n    HK yes;\n    MO yes;\n    default no;\n  &#125;\n....\n server &#123;\n    listen       80;\n    server_name  demo.weiyigeek.top;\n    location &#x2F; &#123;\n      set $rootpath html&#x2F;ch; # 关键点设置一个根目录变量。\n      if ($lang_ch &#x3D; no) &#123; \n        set $rootpath html&#x2F;en;\n      &#125;\n      add_header program-path $rootpath; # 关键点写入到响应头中。\n      add_header country-code $geoip2_data_country_code;\n      root $rootpath;\n      index index.html index.htm;\n    &#125;\n  &#125;\n&#125;</code></pre>\n\n\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><p><a href=\"https://mp.weixin.qq.com/s/H_eOPAUUytH_FPsxz3OC7g\">如何用 Nginx 禁止国外 IP 访问网站</a><br><a href=\"https://mp.weixin.qq.com/s/PPUaSsBhS5Kv1SLiVjc4Gw\">Nginx使用geoip2模块并利用MaxMind的GeoIP2数据库实现处理不同国家或城市的访问最佳实践指南</a></p>\n","text":"0x00前言描述: 为了实现根据访问者访问我们的网站时根据其IP显示其所属地，也为获取不同地区访问者的IP地址等相关信息为目的，所以在搜索引擎中查找解决方案，在网络上查询到如下几种方案Nginx+GeoIP2、使用收费 IP 识别接口、DNS 根据地域解析，然后经过多方面考究，最...","link":"","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"24 mins."},"categories":[{"name":"开源WAF产品选型","slug":"开源WAF产品选型","count":8,"path":"api/categories/开源WAF产品选型.json"}],"tags":[{"name":"优秀文章收藏","slug":"优秀文章收藏","count":5,"path":"api/tags/优秀文章收藏.json"},{"name":"WAF","slug":"WAF","count":7,"path":"api/tags/WAF.json"},{"name":"Nginx","slug":"Nginx","count":8,"path":"api/tags/Nginx.json"},{"name":"开源WAF产品选型","slug":"开源WAF产品选型","count":8,"path":"api/tags/开源WAF产品选型.json"},{"name":"modsecurity","slug":"modsecurity","count":3,"path":"api/tags/modsecurity.json"},{"name":"安全建设","slug":"安全建设","count":8,"path":"api/tags/安全建设.json"},{"name":"GeoIP","slug":"GeoIP","count":1,"path":"api/tags/GeoIP.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x00%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">0x00前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">0x01安装部署</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%8E%AF%E5%A2%83%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">环境说明</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#libmaxminddb%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">libmaxminddb下载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ngx-http-geoip2-module%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">ngx_http_geoip2_module下载</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#mmdblookup-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">mmdblookup 命令</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Geoip2-%E6%A8%A1%E5%9D%97%E7%BC%96%E8%AF%91%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93\"><span class=\"toc-text\">Geoip2 模块编译动态链接库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#GeoLite2-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%8B%E8%BD%BD\"><span class=\"toc-text\">GeoLite2 数据库下载</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#GeoLite2-%E6%95%B0%E6%8D%AE%E5%BA%93%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">GeoLite2 数据库自动更新</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02%E5%AE%9E%E8%B7%B5\"><span class=\"toc-text\">0x02实践</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E4%BD%BF%E7%94%A8GeoIP2%E6%A8%A1%E5%9D%97%E8%AF%B7%E6%B1%82%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84IP%E5%9C%B0%E5%9D%80%E5%9B%BD%E5%AE%B6%E7%9C%81%E4%BB%BD%E7%BB%8F%E7%BA%AC%E5%BA%A6%E5%B1%95%E7%A4%BA\"><span class=\"toc-text\">1.使用GeoIP2模块请求客户端的IP地址国家省份经纬度展示</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BD%BF%E7%94%A8GeoIP2%E6%A8%A1%E5%9D%97%E9%9D%99%E6%AD%A2%E6%9F%90%E4%B8%80%E5%9B%BD%E5%AE%B6%E5%9C%B0%E5%8C%BA%E7%9A%84IP%E5%9C%B0%E5%9D%80%E8%AE%BF%E9%97%AE%E7%BD%91%E7%AB%99\"><span class=\"toc-text\">2.使用GeoIP2模块静止某一国家地区的IP地址访问网站</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E4%BD%BF%E7%94%A8GeoIP2%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E4%B8%8D%E5%90%8C%E5%9B%BD%E5%AE%B6%E8%AE%BF%E9%97%AE%E8%BF%9B%E5%85%A5%E4%B8%8D%E5%90%8C%E7%9B%AE%E5%BD%95%E9%A1%B5%E9%9D%A2\"><span class=\"toc-text\">3.使用GeoIP2模块实现不同国家访问进入不同目录页面</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#References\"><span class=\"toc-text\">References</span></a></li></ol>","author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"软件物料清单工具介绍","uid":"b8a4b9dfcb608a8cfda6fb4feb8db13c","slug":"SBOM工具介绍","date":"2022-08-22T02:26:00.000Z","updated":"2022-10-26T08:46:48.497Z","comments":true,"path":"api/articles/SBOM工具介绍.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159414/4k-backlit-dawn-wallpapers-159414-29454-8398992.png","text":"SBOM工具介绍Backend据Tidelift统计，92%的应用程序包含开源组件。事实上，现代程序平均有70%是开源软件。根据乔·拜登总统于2021年7月12日发布的《关于提高国家网络安全的行政命令》，这是一项要求。该行政命令将SBOM定义为“包含构建软件中使用的各种组件的详细...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"软件供应链安全","slug":"软件供应链安全","count":26,"path":"api/categories/软件供应链安全.json"}],"tags":[{"name":"SBOM","slug":"SBOM","count":5,"path":"api/tags/SBOM.json"},{"name":"软件物料清单","slug":"软件物料清单","count":1,"path":"api/tags/软件物料清单.json"},{"name":"软件物料清单生成工具","slug":"软件物料清单生成工具","count":1,"path":"api/tags/软件物料清单生成工具.json"}],"author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"容器安全-Docker配置安全网络访问控制","uid":"329456693c3fc747f7090ff9cac97881","slug":"Docker配置安全网络访问控制","date":"2022-08-05T02:47:00.000Z","updated":"2022-10-27T02:31:44.766Z","comments":true,"path":"api/articles/Docker配置安全网络访问控制.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159416/4k-beneath-the-clouds-wallpapers-159416-909549-3750058.png","text":"Docker配置安全网络访问控制概述和背景Docker 是一个用于开发、发布和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分离，以便快速交付软件。在全球范围内，Docker已经得到极大的应用。很多时候，用户并不希望Docker 服务对外开放。因此会通过像 -...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"Cloud-Native-Security","slug":"Cloud-Native-Security","count":12,"path":"api/categories/Cloud-Native-Security.json"}],"tags":[{"name":"Docker网络","slug":"Docker网络","count":1,"path":"api/tags/Docker网络.json"},{"name":"容器安全","slug":"容器安全","count":3,"path":"api/tags/容器安全.json"}],"author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}