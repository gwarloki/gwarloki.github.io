{"title":"容器安全-Docker配置安全网络访问控制","uid":"329456693c3fc747f7090ff9cac97881","slug":"Docker配置安全网络访问控制","date":"2022-08-05T02:47:00.000Z","updated":"2022-10-27T02:31:44.766Z","comments":true,"path":"api/articles/Docker配置安全网络访问控制.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159416/4k-beneath-the-clouds-wallpapers-159416-909549-3750058.png","content":"<h1 id=\"Docker配置安全网络访问控制\"><a href=\"#Docker配置安全网络访问控制\" class=\"headerlink\" title=\"Docker配置安全网络访问控制\"></a>Docker配置安全网络访问控制</h1><h2 id=\"概述和背景\"><a href=\"#概述和背景\" class=\"headerlink\" title=\"概述和背景\"></a>概述和背景</h2><p>Docker 是一个用于开发、发布和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分离，以便快速交付软件。在全球范围内，Docker已经得到极大的应用。很多时候，用户并不希望Docker 服务对外开放。因此会通过像 -p 127.0.0.1:80:80这样的参数将端口暴露到回环地址并仅供本地访问，但是由于不恰当的安全配置导致外部攻击者仍然可以访问本地服务。\t</p>\n<h2 id=\"影响版本\"><a href=\"#影响版本\" class=\"headerlink\" title=\"影响版本\"></a>影响版本</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>Docker &lt;&#x3D; 20.10.5</strong>，但是不一定。</p></blockquote>\n<h2 id=\"漏洞复现\"><a href=\"#漏洞复现\" class=\"headerlink\" title=\"漏洞复现\"></a>漏洞复现</h2><h3 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h3><ul>\n<li>target 10.1.82.97</li>\n<li>target docker version Docker version 20.10.7, build f0df350</li>\n<li>attack 10.1.82.95</li>\n</ul>\n<ol>\n<li>查看target docker version<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@tvy-base-worker-03 ~]# docker -v\nDocker version 20.10.7, build f0df350</code></pre></li>\n<li>创建docker容器并将服务映射到本地<br>略-已有满足测试要求的容器服务<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 查看docker暴露服务列表,其中5432和6379绑定本地回环地址\n[root@tvy-base-worker-03 ~]# netstat -nlp |grep docker-proxy|awk &#39;&#123;print $4&#125;&#39;|sort\n0.0.0.0:8000\n0.0.0.0:9000\n127.0.0.1:5432\n127.0.0.1:6379\n# 查看iptables配置\n[root@tvy-base-worker-03 ~]# iptables -nvL DOCKER\nChain DOCKER (2 references)\n pkts bytes target     prot opt in     out     source               destination\n    2    96 ACCEPT     tcp  --  !br-155dee3a3330 br-155dee3a3330  0.0.0.0&#x2F;0            172.21.0.2           tcp dpt:6379\n    2    88 ACCEPT     tcp  --  !br-155dee3a3330 br-155dee3a3330  0.0.0.0&#x2F;0            172.21.0.3           tcp dpt:5432\n 1082 69248 ACCEPT     tcp  --  !br-155dee3a3330 br-155dee3a3330  0.0.0.0&#x2F;0            172.21.0.4           tcp dpt:8000\n  171 10916 ACCEPT     tcp  --  !docker0 docker0  0.0.0.0&#x2F;0            172.17.0.2           tcp dpt:9000</code></pre></li>\n<li>attack 测试<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 未做任何配置，无法访问\n[root@tvy-base-worker-01 ~]# telnet 172.21.0.2 6379\nTrying 172.21.0.2...\nConnected to 172.21.0.2.\nEscape character is &#39;^]&#39;.\n# 添加路由表，可添加网关地址\n[root@tvy-base-worker-01 ~]# ip route add 172.21.0.0&#x2F;24 via 10.1.82.97\n# 扫描容器端口服务\n[root@tvy-base-worker-01 ~]# nmap -p5432 -Pn --open 172.21.0.0&#x2F;24\n\nStarting Nmap 6.40 ( http:&#x2F;&#x2F;nmap.org ) at 2022-08-05 10:22 CST\nNmap scan report for 172.21.0.3\nHost is up (0.00018s latency).\nPORT     STATE SERVICE\n5432&#x2F;tcp open  postgresql\n\nNmap done: 256 IP addresses (256 hosts up) scanned in 4.84 seconds\n[root@tvy-base-worker-01 ~]# nmap -p6379 -Pn --open 172.21.0.0&#x2F;24\n\nStarting Nmap 6.40 ( http:&#x2F;&#x2F;nmap.org ) at 2022-08-05 10:22 CST\nNmap scan report for 172.21.0.2\nHost is up (0.00025s latency).\nPORT     STATE SERVICE\n6379&#x2F;tcp open  unknown\n\nNmap done: 256 IP addresses (256 hosts up) scanned in 4.84 seconds\n# 删除IP route\n[root@tvy-base-worker-01 ~]# ip route del 172.21.0.0&#x2F;24 via 10.1.82.97</code></pre></li>\n</ol>\n<h2 id=\"漏洞分析\"><a href=\"#漏洞分析\" class=\"headerlink\" title=\"漏洞分析\"></a>漏洞分析</h2><p>默认情况下，Docker deamon会在启动container的时候向iptables中添加转发的规则。它会创建一个filter chain - DOCKER。并且防火墙也没有记录。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">firewall-cmd --list-port  \nfirewall-cmd --list-service</code></pre>\n\n<p><img src=\"http://img.moses.wang/new/20220805112707.png\"></p>\n<p>docke利用这个规则向外暴露container的端口。从上图可见，由于source为0.0.0.0，表示任何ip都可以匹配这条规则，因此也就将这个端口暴露给了全世界。只要外部攻击者通过这台主机将流量发送到 172.21.0.3:5432，就会匹配这条规则并成功访问容器中的postgresql服务，<strong>127.0.0.1 并没有什么卵用</strong>。<br><img src=\"http://img.moses.wang/new/20220805133946.png\"></p>\n<h2 id=\"修复方式\"><a href=\"#修复方式\" class=\"headerlink\" title=\"修复方式\"></a>修复方式</h2><p>官方暂未修复该漏洞，可采取临时修复措施<br>启动daemon的时候使用如下的配置：<br><code>--iptables=false</code><br>对于systemd，临时修复方式如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mkdir&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service.d\ncat &lt;&lt; EOF &gt; &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;docker.service.d&#x2F;noiptables.conf\n[Service]\nExecStart&#x3D;\nExecStart&#x3D;&#x2F;us&#x2F;bin&#x2F;docker daemon -H fd:&#x2F;&#x2F;-- iptables&#x3D;false\nEOF\nsystemctl daemon-reload</code></pre>\n\n<p>对于使用sysvinit和upstart的系统，我们可以修改docker的配置文件&#x2F;etc&#x2F;default&#x2F;docker。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 先停止docker  \nsystemcl stop docker  \n# 修改配置   \nvim &#x2F;etc&#x2F;docker&#x2F;daemon.json\n# 如以下内容粘贴进去  \n&#123;  \n&quot;iptables&quot;:false  \n&#125;\n# 保存配置后，重启docker  \nsystemctl restart docker</code></pre>\n<h2 id=\"References\"><a href=\"#References\" class=\"headerlink\" title=\"References\"></a>References</h2><p><a href=\"https://blog.csdn.net/m0_49946916/article/details/109277325\">iptables详解及docker的iptables规则_摩洛哥M的博客-CSDN博客_docker iptables</a><br><a href=\"https://www.jianshu.com/p/69d3ab177655\">https://www.jianshu.com/p/69d3ab177655</a><br><a href=\"https://mp.weixin.qq.com/s/OwEmhmsnuwsCjqcczPztQA\">https://mp.weixin.qq.com/s/OwEmhmsnuwsCjqcczPztQA</a><br><a href=\"https://www.cnblogs.com/sudochen/p/15992994.html\">ip route命令 - sudochen - 博客园</a></p>\n","text":"Docker配置安全网络访问控制概述和背景Docker 是一个用于开发、发布和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分离，以便快速交付软件。在全球范围内，Docker已经得到极大的应用。很多时候，用户并不希望Docker 服务对外开放。因此会通过像 -...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"Cloud-Native-Security","slug":"Cloud-Native-Security","count":12,"path":"api/categories/Cloud-Native-Security.json"}],"tags":[{"name":"Docker网络","slug":"Docker网络","count":1,"path":"api/tags/Docker网络.json"},{"name":"容器安全","slug":"容器安全","count":3,"path":"api/tags/容器安全.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Docker%E9%85%8D%E7%BD%AE%E5%AE%89%E5%85%A8%E7%BD%91%E7%BB%9C%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">Docker配置安全网络访问控制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0%E5%92%8C%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">概述和背景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BD%B1%E5%93%8D%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">影响版本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0\"><span class=\"toc-text\">漏洞复现</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">测试环境</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90\"><span class=\"toc-text\">漏洞分析</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E5%A4%8D%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">修复方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#References\"><span class=\"toc-text\">References</span></a></li></ol></li></ol>","author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"开源WAF调研之产品选型-Nginx+GeoIP2","uid":"8f0f57e3d20bdf89f372a3376a26a3ed","slug":"Nginx+GeoIP2","date":"2022-08-10T08:40:59.440Z","updated":"2022-10-27T01:14:56.812Z","comments":true,"path":"api/articles/Nginx+GeoIP2.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159445/a-tunnel-8k-secret-passage-wallpapers-159445-3938-223551.png","text":"0x00前言描述: 为了实现根据访问者访问我们的网站时根据其IP显示其所属地，也为获取不同地区访问者的IP地址等相关信息为目的，所以在搜索引擎中查找解决方案，在网络上查询到如下几种方案Nginx+GeoIP2、使用收费 IP 识别接口、DNS 根据地域解析，然后经过多方面考究，最...","link":"","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"24 mins."},"categories":[{"name":"开源WAF产品选型","slug":"开源WAF产品选型","count":8,"path":"api/categories/开源WAF产品选型.json"}],"tags":[{"name":"优秀文章收藏","slug":"优秀文章收藏","count":5,"path":"api/tags/优秀文章收藏.json"},{"name":"WAF","slug":"WAF","count":7,"path":"api/tags/WAF.json"},{"name":"Nginx","slug":"Nginx","count":8,"path":"api/tags/Nginx.json"},{"name":"开源WAF产品选型","slug":"开源WAF产品选型","count":8,"path":"api/tags/开源WAF产品选型.json"},{"name":"modsecurity","slug":"modsecurity","count":3,"path":"api/tags/modsecurity.json"},{"name":"安全建设","slug":"安全建设","count":8,"path":"api/tags/安全建设.json"},{"name":"GeoIP","slug":"GeoIP","count":1,"path":"api/tags/GeoIP.json"}],"author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"软件供应链安全分析工具-V-Achilles","uid":"f2412a8bd3bfecd60141b4e2ac30134b","slug":"工具-依赖关系图V-Achilles","date":"2022-08-02T03:17:00.000Z","updated":"2022-10-26T09:07:50.850Z","comments":true,"path":"api/articles/工具-依赖关系图V-Achilles.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159414/4k-backlit-dawn-wallpapers-159414-29484-2351973.png","text":"工具-依赖关系图V-Achilles简介V-Achilles是一个工具，可以显示受软件漏洞攻击影响的直接和间接依赖项的可视化（即使用依赖关系图）。演示地址：Achilles 4个GitHub存储库的漏洞报告 sinopia：报告 cpnmjs：报告 window-build-to...","link":"","photos":[],"count_time":{"symbolsCount":558,"symbolsTime":"1 mins."},"categories":[{"name":"软件供应链安全","slug":"软件供应链安全","count":26,"path":"api/categories/软件供应链安全.json"}],"tags":[{"name":"SCA","slug":"SCA","count":15,"path":"api/tags/SCA.json"},{"name":"软件成分分析工具","slug":"软件成分分析工具","count":5,"path":"api/tags/软件成分分析工具.json"},{"name":"软件依赖关系图","slug":"软件依赖关系图","count":1,"path":"api/tags/软件依赖关系图.json"}],"author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}