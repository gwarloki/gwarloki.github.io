{"title":"azkaban安装","uid":"f6f3c3a5d4505ac58f98c7a3b8694668","slug":"Centos7安装azkaban","date":"2020-08-23T04:53:03.000Z","updated":"2022-10-27T01:36:32.160Z","comments":true,"path":"api/articles/Centos7安装azkaban.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159445/a-tunnel-8k-secret-passage-wallpapers-159445-3984-5177429.png","content":"<h2 id=\"Centos7安装Azkaban\"><a href=\"#Centos7安装Azkaban\" class=\"headerlink\" title=\"Centos7安装Azkaban\"></a>Centos7安装Azkaban</h2><h3 id=\"Centos7安装Gradle\"><a href=\"#Centos7安装Gradle\" class=\"headerlink\" title=\"Centos7安装Gradle\"></a>Centos7安装Gradle</h3><p>1.下载Gradle安装包</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget https:&#x2F;&#x2F;downloads.gradle.org&#x2F;distributions&#x2F;gradle-3.2.1-all.zip</code></pre>\n<p>2.新建版本目录并解压安装</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mkdir &#x2F;opt&#x2F;gradle\nunzip -d &#x2F;opt&#x2F;gradle gradle-4.10.3-all.zip</code></pre>\n<p>3.配置环境变量</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi ~&#x2F;.bash_profile\nexport PATH&#x3D;$PATH:&#x2F;opt&#x2F;gradle&#x2F;gradle-4.10.3&#x2F;bin\nsource ~&#x2F;.bash_profile\ngradle -v</code></pre>\n<p>4.配置全局变量替换源</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi ~&#x2F;.gradle&#x2F;init.gradle\nallprojects&#123;\n    repositories &#123;\n        def ALIYUN_REPOSITORY_URL &#x3D; &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&#x2F;&#39;\n        def ALIYUN_JCENTER_URL &#x3D; &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;jcenter&#x2F;&#39;\n        def ALIYUN_GOOGLE_URL &#x3D; &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;google&#x2F;&#39;\n        def ALIYUN_GRADLE_PLUGIN_URL &#x3D; &#39;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;gradle-plugin&#x2F;&#39;\n        all &#123; ArtifactRepository repo -&gt;\n            if(repo instanceof MavenArtifactRepository)&#123;\n                def url &#x3D; repo.url.toString()\n                if (url.startsWith(&#39;https:&#x2F;&#x2F;repo1.maven.org&#x2F;maven2&#x2F;&#39;)) &#123;\n                    project.logger.lifecycle &quot;Repository $&#123;repo.url&#125; replaced by $ALIYUN_REPOSITORY_URL.&quot;\n                    remove repo\n                &#125;\n                if (url.startsWith(&#39;https:&#x2F;&#x2F;jcenter.bintray.com&#x2F;&#39;)) &#123;\n                    project.logger.lifecycle &quot;Repository $&#123;repo.url&#125; replaced by $ALIYUN_JCENTER_URL.&quot;\n                    remove repo\n                &#125;\n                if (url.startsWith(&#39;https:&#x2F;&#x2F;dl.google.com&#x2F;dl&#x2F;android&#x2F;maven2&#x2F;&#39;)) &#123;\n                    project.logger.lifecycle &quot;Repository $&#123;repo.url&#125; replaced by $ALIYUN_GOOGLE_URL.&quot;\n                    remove repo\n                &#125;\n                if (url.startsWith(&#39;https:&#x2F;&#x2F;plugins.gradle.org&#x2F;m2&#x2F;&#39;)) &#123;\n                    project.logger.lifecycle &quot;Repository $&#123;repo.url&#125; replaced by $ALIYUN_GRADLE_PLUGIN_URL.&quot;\n                    remove repo\n                &#125;\n            &#125;\n        &#125;\n        maven &#123; url ALIYUN_REPOSITORY_URL &#125;\n        maven &#123; url ALIYUN_JCENTER_URL &#125;\n        maven &#123; url ALIYUN_GOOGLE_URL &#125;\n        maven &#123; url ALIYUN_GRADLE_PLUGIN_URL &#125;\n    &#125;\n&#125;</code></pre>\n<p>5.gradlew和gradle命令的区别<br>Gradlew是包装器，自动下载包装器里定义好的gradle 版本，保证编译环境统一，gradle 是用本地的gradle版本。<br><a href=\"https://www.zybuluo.com/xtccc/note/275168\">Wrapper (gradlew)</a></p>\n<h2 id=\"安装Azkanban\"><a href=\"#安装Azkanban\" class=\"headerlink\" title=\"安装Azkanban\"></a>安装Azkanban</h2><h3 id=\"AZkanban前期知识准备\"><a href=\"#AZkanban前期知识准备\" class=\"headerlink\" title=\"AZkanban前期知识准备\"></a>AZkanban前期知识准备</h3><p>1.介绍</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Azkaban是由Linkedin公司推出的一个批量工作流任务调度器，主要用于在一个工作流内以一个特定的顺序运行一组工作和流程，它的配置是通过简单的key:value对的方式，通过配置中的dependencies 来设置依赖关系(依赖必须是一个DAG)。\nAzkaban使用job配置文件建立任务之间的依赖关系，并提供一个易于使用的web用户界面维护和跟踪你的工作流。\nAzkaban官网：https:&#x2F;&#x2F;azkaban.github.io&#x2F;</code></pre>\n<p>2.Azkanban的特点</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1.功能强大，可以调度几乎所有软件的执行，提供模块化和可插拔的插件机制，原生支持command、Java、Hive、Pig、Hadoop；\n2.基于Java开发，代码结构清晰，易于二次开发；\n3.简单易用的Web用户界面，可以监控每一个步骤；\n4.提供job配置文件快速建立任务和任务之间的依赖关系；\n5.提供了Restful接口，方便我们平台进行定制化调用。</code></pre>\n<p>3.Azkaban的架构</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">Azkaban由三个关键组件构成：\n  1.关系型数据库（MySQL）:用于保存工作流相关信息；\n  2.AzkabanWebServer: 整个 Azkaban 工作流系统的主要管理者，它用于用户登录认证、负责 project 管理、定时执行工作流、跟踪工作流执行进度等一系列任务；\n  3.AzkabanExecutorServer: 负责具体的工作流的调度提交。</code></pre>\n<p>4.Azkaban的三大模块</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">azkaban有三大模块,azkaban-common,azkaban-exec-server,azkaban-web-server.\n  azkaban-common：是公共模块,比如访问数据库,trigger管理工具,邮件工具,以及job.\n  azkaban-exec-server：是执行器,主要用于执行任务\n  azkaban-web-server：是调度中心,用于任务展示、编辑,调度任务</code></pre>\n<p>5.部署模式</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">solo-server模式:\nDB使用的是一个内嵌的H2，Web Server和Executor Server运行在同一个进程里。这种模式包含Azkaban的所有特性，但一般用来学习和测试。\n\ntwo-server模式:\nDB使用的是MySQL，MySQL支持master-slave架构，Web Server和Executor Server运行在不同的进程中。\n\n分布式multiple-executor模式:\nDB使用的是MySQL，MySQL支持master-slave架构，Web Server和Executor Server运行在不同机器上，且有多个Executor Server。</code></pre>\n<h3 id=\"编译安装\"><a href=\"#编译安装\" class=\"headerlink\" title=\"编译安装\"></a>编译安装</h3><p>1.编译</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">git clone https:&#x2F;&#x2F;github.com&#x2F;azkaban&#x2F;azkaban.git [[clone]] the repo\ncd azkaban; sh .&#x2F;gradlew build  [[build]] &amp; install package\n.&#x2F;gradlew clean \n.&#x2F;gradlew installDist\n.&#x2F;gradlew test\n.&#x2F;gradlew build -x test\n\ncd azkaban-solo-server&#x2F;build&#x2F;install&#x2F;azkaban-solo-server; bin&#x2F;start-solo.sh [[start]] solo server \nbin&#x2F;shutdown-solo.sh  [[stop]] </code></pre>\n<p>2.使用编译好的文件进行安装<br>节点准备：   </p>\n<ul>\n<li>web-serve：172.16.3.109  </li>\n<li>executor-server：172.16.3.179  </li>\n<li>DB-server：172.16.3.123<br>编译后文件上传并解压：<br>azkaban-web-server    <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mkdir opt&#x2F;azkaban\ncd azkaban\ntar -zxvf azkaban-web-server-0.1.0-SNAPSHOT.tar.gz\ntar -zxvf azkaban-db-0.1.0-SNAPSHOT.tar.gz\nmv azkaban-db-0.1.0-SNAPSHOT azkaban-db\nmv azkaban-web-server-0.1.0-SNAPSHOT azkaban-web-server</code></pre>\nexcutor-server      <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mkdir azkaban\ncd azkaban\ntar -zxvf azkaban-exec-server-0.1.0-SNAPSHOT.tar.gz\nmv azkaban-exec-server-0.1.0-SNAPSHOT azkaban-exec-server</code></pre>\nDB-server   <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mysql&gt; CREATE DATABASE azkaban;\nmysql&gt; use azkaban;\nmysql&gt; source &#x2F;opt&#x2F;azkaban&#x2F;azkaban-db&#x2F;create-all-sql-0.1.0-SNAPSHOT.sql; [[工具导入失败建议使用SQL]]语句导入\ninsert into executors(host,port,active) values(&#39;172.16.3.179&#39;,12331,1);</code></pre>\n3.Executor端Server安装<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@kdc conf]# cat azkaban.properties\n# Azkaban Personalization Settings\nazkaban.name&#x3D;Test\nazkaban.label&#x3D;My Local Azkaban\nazkaban.color&#x3D;[[FF3601]]\nazkaban.default.servlet.path&#x3D;&#x2F;index\nweb.resource.dir&#x3D;web&#x2F;\ndefault.timezone.id&#x3D;America&#x2F;Los_Angeles\n# Azkaban UserManager class\nuser.manager.class&#x3D;azkaban.user.XmlUserManager\nuser.manager.xml.file&#x3D;conf&#x2F;azkaban-users.xml\n# Loader for projects\nexecutor.global.properties&#x3D;conf&#x2F;global.properties\nazkaban.project.dir&#x3D;projects\n# Velocity dev mode\nvelocity.dev.mode&#x3D;false\n# Azkaban Jetty server properties.\njetty.use.ssl&#x3D;false\njetty.maxThreads&#x3D;25\njetty.port&#x3D;8081\n# Where the Azkaban web server is located\nazkaban.webserver.url&#x3D;http:&#x2F;&#x2F;172.16.3.109:8081\n# mail settings\nmail.sender&#x3D;\nmail.host&#x3D;\n# User facing web server configurations used to construct the user facing server URLs. They are useful when there is a reverse proxy between Azkaban web servers and users.\n# enduser -&gt; myazkabanhost:443 -&gt; proxy -&gt; localhost:8081\n# when this parameters set then these parameters are used to generate email links.\n# if these parameters are not set then jetty.hostname, and jetty.port(if ssl configured jetty.ssl.port) are used.\n# azkaban.webserver.external_hostname&#x3D;myazkabanhost.com\n# azkaban.webserver.external_ssl_port&#x3D;443\n# azkaban.webserver.external_port&#x3D;8081\njob.failure.email&#x3D;\njob.success.email&#x3D;\nlockdown.create.projects&#x3D;false\ncache.directory&#x3D;cache\n# JMX stats\njetty.connector.stats&#x3D;true\nexecutor.connector.stats&#x3D;true\n# Azkaban plugin settings\nazkaban.jobtype.plugin.dir&#x3D;plugins&#x2F;jobtypes\n# Azkaban mysql settings by default. Users should configure their own username and password.\ndatabase.type&#x3D;mysql\nmysql.port&#x3D;3306\nmysql.host&#x3D;172.16.3.123\nmysql.database&#x3D;azkabab\nmysql.user&#x3D;root\nmysql.password&#x3D;root\nmysql.numconnections&#x3D;100\n# Azkaban Executor settings\nexecutor.maxThreads&#x3D;50\nexecutor.flow.threads&#x3D;30\nexecutor.port&#x3D;12331\nexecutor.connector.stats&#x3D;true\nexecutor.maxThreads&#x3D;50\nexecutor.flow.threads&#x3D;30\nexecution.logs.retention.ms&#x3D;2419200000</code></pre>\n4.启动executor服务<br><em>注意：启动顺序一定是先启动azkaban-exec-server，再启动azkaban-web-server</em><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">.&#x2F;bin&#x2F;start-web.sh [[一定要在bin]]文件的上一层目录进行启动\ntail -f executorServerLog_*.out #查看启动日志\njps #查看进程\ncurl -G &quot;localhost:12331&#x2F;executor?action&#x3D;activate&quot; &amp;&amp; echo [[手动激活executor]]</code></pre>\n5.Web端Server安装 <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[[配置azkaban]].properties文件\ncat azkaban.properties\n# Azkaban Personalization Settings\nazkaban.name&#x3D;Test\nazkaban.label&#x3D;My Local Azkaban\nazkaban.color&#x3D;[[FF3601]]\nazkaban.default.servlet.path&#x3D;&#x2F;index\nweb.resource.dir&#x3D;web&#x2F;\ndefault.timezone.id&#x3D;America&#x2F;Los_Angeles\n# Azkaban UserManager class\nuser.manager.class&#x3D;azkaban.user.XmlUserManager\nuser.manager.xml.file&#x3D;conf&#x2F;azkaban-users.xml\n# Loader for projects\nexecutor.global.properties&#x3D;conf&#x2F;global.properties\nazkaban.project.dir&#x3D;projects\n# Velocity dev mode\nvelocity.dev.mode&#x3D;false\n# Azkaban Jetty server properties.\njetty.use.ssl&#x3D;false\njetty.maxThreads&#x3D;25\njetty.port&#x3D;8081\n# Azkaban Executor settings\n# mail settings\nmail.sender&#x3D;\nmail.host&#x3D;\n# User facing web server configurations used to construct the user facing server URLs. They are useful when there is a reverse proxy between Azkaban web servers and users.\n# enduser -&gt; myazkabanhost:443 -&gt; proxy -&gt; localhost:8081\n# when this parameters set then these parameters are used to generate email links.\n# if these parameters are not set then jetty.hostname, and jetty.port(if ssl configured jetty.ssl.port) are used.\n# azkaban.webserver.external_hostname&#x3D;myazkabanhost.com\n# azkaban.webserver.external_ssl_port&#x3D;443\n# azkaban.webserver.external_port&#x3D;8081\njob.failure.email&#x3D;\njob.success.email&#x3D;\nlockdown.create.projects&#x3D;false\ncache.directory&#x3D;cache\n# JMX stats\njetty.connector.stats&#x3D;true\nexecutor.connector.stats&#x3D;true\n# Azkaban mysql settings by default. Users should configure their own username and password.\ndatabase.type&#x3D;mysql\nmysql.port&#x3D;3306\nmysql.host&#x3D;172.16.3.123\nmysql.database&#x3D;azkaban\nmysql.user&#x3D;root\nmysql.password&#x3D;root\nmysql.numconnections&#x3D;100\n[[Multiple]] Executor\nazkaban.use.multiple.executors&#x3D;true\nazkaban.executorselector.filters&#x3D;StaticRemainingFlowSize,MinimumFreeMemory,CpuStatus\nazkaban.executorselector.comparator.NumberOfAssignedFlowComparator&#x3D;1\nazkaban.executorselector.comparator.Memory&#x3D;1\nazkaban.executorselector.comparator.LastDispatched&#x3D;1\nazkaban.executorselector.comparator.CpuUsage&#x3D;1</code></pre>\n启动web服务<br><em>注意：启动顺序一定是先启动azkaban-exec-server，再启动azkaban-web-server</em><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">.&#x2F;bin&#x2F;start-web.sh [[一定要在bin]]文件的上一层目录进行启动\ntail -f executorServerLog_*.out #查看启动日志\njps #查看进程</code></pre>\n配置jetty ssl  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># keytool -keystore keystore -alias jetty -genkey -keyalg RSA\n \nEnter keystore password:\n \nRe-enter new password:\n \nWhat is your first and last name?\n \n[Unknown]: YY\n \nWhat is the name of your organizational unit?\n \n[Unknown]: YY\n \nWhat is the name of your organization?\n \n[Unknown]: YY\n \nWhat is the name of your City or Locality?\n \n[Unknown]: Beijing\n \nWhat is the name of your State or Province?\n \n[Unknown]: Beijing\n \nWhat is the two-letter country code for this unit?\n \n[Unknown]: CN\n \nIs CN&#x3D;YY, OU&#x3D;YY, O&#x3D;YY, L&#x3D;shanghai, ST&#x3D;shanghai, C&#x3D;CN correct?\n \n[no]: y</code></pre>\n<em>将生成的keystone文件拷贝到web-server的安装目录下，和conf等目录同级</em><br>修改conf&#x2F;azkaban.properties配置文件  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[[cat]] azkaban.properties\n \n# Azkaban Personalization Settings\n \nazkaban.name&#x3D;Test [[服务器UI]]名称，用于服务器上方显示的名字\n \nazkaban.label&#x3D;My Local Azkaban #描述\n \nazkaban.color&#x3D;[[FF3601]] [[UI]]颜色\n \nazkaban.default.servlet.path&#x3D;&#x2F;index\n \nweb.resource.dir&#x3D;web&#x2F; [[默认根web]]目录\n \ndefault.timezone.id&#x3D;Asia&#x2F;Shanghai #默认时区，已改为亚洲&#x2F;上海\n \n# Azkaban UserManager class\n \nuser.manager.class&#x3D;azkaban.user.XmlUserManager #用户权限管理默认类\n \nuser.manager.xml.file&#x3D;conf&#x2F;azkaban-users.xml #用户配置，具体配置参见下文\n \n# Loader for projects\n \nexecutor.global.properties&#x3D;conf&#x2F;global.properties [[globa]]配置文件所在位置\n \nazkaban.project.dir&#x3D;projects\n \n \n \n# Velocity dev mode\n \nvelocity.dev.mode&#x3D;false\n \n# Azkaban Jetty server properties. [[jetty]]服务器属性\n \njetty.maxThreads&#x3D;25 #最大线程数\n \njetty.ssl.port&#x3D;8443 [[jetty]] ssl端口号\n \njetty.port&#x3D;8081 [[jetty]]端口\n \njetty.keystore&#x3D;keystore [[SSL]]文件名\n \njetty.password&#x3D;bigdata@123 [[SSL]]文件密码\n \njetty.keypassword&#x3D;bigdata@123 [[jetty主密码与keystore]]文件相同\n \njetty.truststore&#x3D;keystore [[SSL]]文件名\n \njetty.trustpassword&#x3D;bigdata@123 [[SSL]]文件密码\n \n# Azkaban Executor settings\n \nexecutor.port&#x3D;12321 #执行服务器端口\n \n# mail settings #邮件配置（暂没有配置）\n \nmail.sender&#x3D; #发送邮箱\n \nmail.host&#x3D; [[发送邮箱smtp]]地址\n \nmail.password&#x3D; #邮箱密码\n \njob.failure.email&#x3D; #任务失败时发送邮件的地址\n \njob.success.email&#x3D; #任务成功时发送邮件的地址\n \nlockdown.create.projects&#x3D;false\n \ncache.directory&#x3D;cache #缓存目录\n \n# JMX stats\n \njetty.connector.stats&#x3D;true\n \nexecutor.connector.stats&#x3D;true\n \n# Azkaban plugin settings\n \nazkaban.jobtype.plugin.dir&#x3D;plugins&#x2F;jobtypes\n \n \n \ndatabase.type&#x3D;mysql #数据库类型\n \nmysql.port&#x3D;3306 #数据库端口号\n \nmysql.host&#x3D;172.31.217.173 #数据库连接地址\n \nmysql.database&#x3D;azkaban #数据库实例名\n \nmysql.user&#x3D;azkaban #数据库用户名\n \nmysql.password&#x3D;bigdata@123 #数据库密码\n \nmysql.numconnections&#x3D;100 #数据库最大连接数\n \nazkaban.use.multiple.executors&#x3D;true\n \nazkaban.executorselector.filters&#x3D;StaticRemainingFlowSize,MinimumFreeMemory,CpuStatus\n \nazkaban.executorselector.comparator.NumberOfAssignedFlowComparator&#x3D;1\n \nazkaban.executorselector.comparator.Memory&#x3D;1\n \nazkaban.executorselector.comparator.LastDispatched&#x3D;1\n \nazkaban.executorselector.comparator.CpuUsage&#x3D;1\n</code></pre></li>\n</ul>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p><a href=\"https://azkaban.readthedocs.io/en/latest/getStarted.html\">Azkaban doc</a><br><a href=\"https://github.com/azkaban/azkaban\">github项目地址</a><br><a href=\"https://mp.weixin.qq.com/s/GJQd0ENBzWy-V-KxsD_5HA\">Azkaban3.X（可视化任务调度器）多节点集群部署</a><br><a href=\"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=MzU3MDkzNjAyMw==&action=getalbum&album_id=1538671208370634753&scene=173&from_msgid=2247484523&from_itemidx=1&count=3&nolastread=1#wechat_redirect\">Azkaban学习</a><br><a href=\"https://blog.csdn.net/hrayha/article/details/83996840\">azkaban的部署过程中遇到的一些坑（部署篇)</a><br><a href=\"https://blog.csdn.net/qq_35653822/article/details/114090796\">hadoop学习笔记7-Azkaban</a><br><a href=\"https://mp.weixin.qq.com/s/w_PzkPKcgTYodKT1g8uqPQ\">Azkaban任务调度框架的编译与安装</a></p>\n","text":"Centos7安装AzkabanCentos7安装Gradle1.下载Gradle安装包 wget https:&#x2F;&#x2F;downloads.gradle.org&#x2F;distributions&#x2F;gradle-3.2.1-all.zip 2.新建版本...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"大数据","slug":"大数据","count":3,"path":"api/categories/大数据.json"}],"tags":[{"name":"大数据","slug":"大数据","count":3,"path":"api/tags/大数据.json"},{"name":"分布式任务调度","slug":"分布式任务调度","count":1,"path":"api/tags/分布式任务调度.json"},{"name":"Azkaban","slug":"Azkaban","count":1,"path":"api/tags/Azkaban.json"},{"name":"安装手册","slug":"安装手册","count":2,"path":"api/tags/安装手册.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Centos7%E5%AE%89%E8%A3%85Azkaban\"><span class=\"toc-text\">Centos7安装Azkaban</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Centos7%E5%AE%89%E8%A3%85Gradle\"><span class=\"toc-text\">Centos7安装Gradle</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85Azkanban\"><span class=\"toc-text\">安装Azkanban</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#AZkanban%E5%89%8D%E6%9C%9F%E7%9F%A5%E8%AF%86%E5%87%86%E5%A4%87\"><span class=\"toc-text\">AZkanban前期知识准备</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">编译安装</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">参考资料</span></a></li></ol>","author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"手动安装CDH6.1","uid":"6b3a3497e1eeebd4a65d0ba4c26e41db","slug":"手动安装CDH6.1.md","date":"2020-10-20T09:53:00.000Z","updated":"2022-10-27T01:28:20.806Z","comments":true,"path":"api/articles/手动安装CDH6.1.md.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159445/a-tunnel-8k-secret-passage-wallpapers-159445-3964-1849347.png","text":"手工安装仓库# 官方Parcels仓库： # https:&#x2F;&#x2F;archive.cloudera.com&#x2F;cdh6&#x2F;6.1.0&#x2F;parcels&#x2F; # # Cloudera-Manger仓库： # https:&#x2F;&...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"大数据","slug":"大数据","count":3,"path":"api/categories/大数据.json"}],"tags":[{"name":"Hadoop","slug":"Hadoop","count":2,"path":"api/tags/Hadoop.json"},{"name":"Cloudera","slug":"Cloudera","count":2,"path":"api/tags/Cloudera.json"},{"name":"大数据","slug":"大数据","count":3,"path":"api/tags/大数据.json"}],"author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}