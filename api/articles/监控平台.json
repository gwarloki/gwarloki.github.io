{"title":"监控平台搭建","uid":"89d5cf8a319b3740168525b9ad32b4e4","slug":"监控平台","date":"2021-09-10T16:00:00.000Z","updated":"2022-11-02T07:23:10.493Z","comments":true,"path":"api/articles/监控平台.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159420/4k-dramatic-sunset-over-blidinje-wallpapers-159420-21846-5367686.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>   随着应用容器化和微服务的兴起，借由 Docker和 Kubernetes等工具，服务的快速开发和部署成为可能，构建微服务应用变得越来越简单。但是随着大型单体应用拆分为微服务，服务之间的依赖和调用变得极为复杂，这些服务可能是不同团队开发的，可能基于不同的语言，微服务之间可能是利用 RPC、RESTful API，也可能是通过消息队列实现调用或通讯。如何理清服务依赖调用关系、如何在这样的环境下快速 debug、追踪服务处理耗时、查找服务性能瓶颈、合理对服务的容量评估都变成一个棘手的事情。</p>\n<h2 id=\"Metrices\"><a href=\"#Metrices\" class=\"headerlink\" title=\"Metrices\"></a>Metrices</h2><p>   产品功能对比</p>\n<table>\n<thead>\n<tr>\n<th>对比项</th>\n<th>Nightingale</th>\n<th>Prometheus</th>\n<th>Zabbix</th>\n<th>Skywalking</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>展示方面</td>\n<td>支持即时看板、监控大盘</td>\n<td>需要配合第三方展示工具、Grafana</td>\n<td>比较复古，不支持多个指标放到一张图里展示，不支持同环比等展示方式</td>\n<td>支持大屏看板，但是不太直观，较新</td>\n</tr>\n<tr>\n<td>易用性方面</td>\n<td>大部分操作都可在页面完成，兼用prometheus生态</td>\n<td>设计上偏工具，策略配置、采集配置都是编辑yaml文件，使用方便，需要二次深度包装</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>业务监控</td>\n<td>数据结构灵活，支持SDK埋点、端上日志解析</td>\n<td>主要是SDK埋点方式，不支持日志解析，手段相对单一</td>\n<td>Zabbix由于数据结构较为简单，不支持指标标签，业务指标聚合比较难搞</td>\n<td></td>\n</tr>\n<tr>\n<td>运维体系</td>\n<td>完备的用户权限体系</td>\n<td>设计上偏工具，运维体系方面的设计考虑较少，需要二次深度包装</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>报警方面</td>\n<td>生产级灵活，页面操作直接选择告警人和告警团队</td>\n<td>整体较为灵活，只是配置复杂，学习成本高，无页面支持，直接编辑yaml文件</td>\n<td>整体较为灵活，配置复杂，学习成本高</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"Tracing\"><a href=\"#Tracing\" class=\"headerlink\" title=\"Tracing\"></a>Tracing</h2><p>方案对比</p>\n<table>\n<thead>\n<tr>\n<th>方案</th>\n<th>Jaeger</th>\n<th>Zipkin</th>\n<th>Apache SkyWalking</th>\n<th>CAT</th>\n<th>Pinpoint</th>\n<th>Elastic APM</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>开发语言</td>\n<td>Go</td>\n<td>Java</td>\n<td>Java</td>\n<td>Java</td>\n<td>Java</td>\n<td>Go</td>\n</tr>\n<tr>\n<td>Github Star</td>\n<td>14.1k+</td>\n<td>14.6k+</td>\n<td>17.6k+</td>\n<td>15.8k+</td>\n<td>11.6k+</td>\n<td>400+</td>\n</tr>\n<tr>\n<td>背后组织</td>\n<td>CNCF Uber</td>\n<td>Apache</td>\n<td>Apache</td>\n<td>美团</td>\n<td>NAVER</td>\n<td>Elastic</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>Twitter</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>侵入性</td>\n<td>中</td>\n<td>高</td>\n<td>低</td>\n<td>高</td>\n<td>低</td>\n<td>很低</td>\n</tr>\n<tr>\n<td>OpenTracing</td>\n<td>是</td>\n<td>是</td>\n<td>是</td>\n<td>否</td>\n<td>否</td>\n<td>不完善</td>\n</tr>\n<tr>\n<td>支持客户端</td>\n<td>java</td>\n<td>java</td>\n<td>java</td>\n<td>java</td>\n<td>java</td>\n<td>go</td>\n</tr>\n<tr>\n<td></td>\n<td>go</td>\n<td>go</td>\n<td>.net core</td>\n<td>c&#x2F;c++</td>\n<td>php</td>\n<td>java</td>\n</tr>\n<tr>\n<td></td>\n<td>python</td>\n<td>python</td>\n<td>nodejs</td>\n<td>python</td>\n<td></td>\n<td>nodejs</td>\n</tr>\n<tr>\n<td></td>\n<td>nodejs</td>\n<td>c#</td>\n<td>php</td>\n<td>nodejs</td>\n<td></td>\n<td>python</td>\n</tr>\n<tr>\n<td></td>\n<td>c++&#x2F;c</td>\n<td>php等</td>\n<td></td>\n<td>go</td>\n<td></td>\n<td>ruby</td>\n</tr>\n<tr>\n<td>UI丰富度</td>\n<td>中</td>\n<td>中</td>\n<td>较高</td>\n<td>高</td>\n<td>高</td>\n<td>中</td>\n</tr>\n<tr>\n<td>监控报警</td>\n<td>无，需要结合其他工具</td>\n<td>无，需要结合其他工具</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n<td>支持</td>\n</tr>\n<tr>\n<td>二次开发难度</td>\n<td>低</td>\n<td>中</td>\n<td>中</td>\n<td>高</td>\n<td>高</td>\n<td>高</td>\n</tr>\n<tr>\n<td>存储类型</td>\n<td>Memory</td>\n<td>Memory</td>\n<td>H2</td>\n<td>HDFS</td>\n<td>HBase</td>\n<td>Elasticsearch</td>\n</tr>\n<tr>\n<td></td>\n<td>Cassandra</td>\n<td>Cassandra</td>\n<td>Elasticsearch</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>Elasticsearch</td>\n<td>Elasticsearch</td>\n<td>Mysql</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>Kafka</td>\n<td>Mysql</td>\n<td>TiDB</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h1 id=\"监控范围\"><a href=\"#监控范围\" class=\"headerlink\" title=\"监控范围\"></a>监控范围</h1><ul>\n<li>指标监控</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>** 服务类型**</th>\n<th><strong>服务名称</strong></th>\n<th><strong>监控项</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>大数据</td>\n<td>Elasticsearch</td>\n<td>包括集群&#x2F;索引&#x2F;节点等监控</td>\n</tr>\n<tr>\n<td>开发语言</td>\n<td>JVM</td>\n<td>包括 Heap&#x2F;thread&#x2F;gc&#x2F;cpu&#x2F;file 等监控</td>\n</tr>\n<tr>\n<td>中间件</td>\n<td>kafka</td>\n<td>包括 Broker&#x2F;topic&#x2F;consumer Group 等监控</td>\n</tr>\n<tr>\n<td>基础设施</td>\n<td>Linux</td>\n<td>包括 Cpu Api Server&#x2F;dns&#x2F;workload&#x2F;network 等监控</td>\n</tr>\n<tr>\n<td></td>\n<td>Kubernetes</td>\n<td>kubermetrics</td>\n</tr>\n<tr>\n<td>数据库</td>\n<td>Mysql</td>\n<td>包括网络&#x2F;连接数&#x2F;慢查询等</td>\n</tr>\n<tr>\n<td></td>\n<td>Redis</td>\n<td>包括内存使用率&#x2F;连接数&#x2F;命令执行情况等监控</td>\n</tr>\n<tr>\n<td></td>\n<td>Mongodb</td>\n<td>包括文档数&#x2F;读写性能&#x2F;网络流量等</td>\n</tr>\n<tr>\n<td>巡检</td>\n<td>健康巡检</td>\n<td>通过 Blackbox 定期对目标服务进行连通性测试，掌握服务的健康状况，及时发现异常</td>\n</tr>\n</tbody></table>\n<ul>\n<li><p><a href=\"http://trace.ruijie.com.cn:8080/\">应用性能观测</a></p>\n</li>\n<li><p>痛点：<br>随着业务不断发展，业务逻辑和服务调用日益复杂。导致应用性能问题分析与定位日益艰难，给监控运维带来了巨大的挑战：<br>应用之间的依赖关系复杂，难以梳理。<br>调用链路长，排查和定位群体困难。<br>接口调用、数据库调用关系复杂，管理难度大。  </p>\n</li>\n<li><p>解决方案：<br>基于应用拓扑自助发现，定位性能瓶颈。<br>基于关键性能指标对比，优化应用性能。<br>根据指标变化趋势配置告警，及时了解异常。  </p>\n</li>\n<li><p>前端性能监控<br>主要关注用户页面性能（页面测速，接口测速，CDN 测速等）和质量（JS 错误，Ajax 错误等）</p>\n</li>\n</ul>\n<h1 id=\"服务器监控\"><a href=\"#服务器监控\" class=\"headerlink\" title=\"服务器监控\"></a>服务器监控</h1><h2 id=\"安装agentd\"><a href=\"#安装agentd\" class=\"headerlink\" title=\"安装agentd\"></a>安装agentd</h2><p>访问地址： <a href=\"http://metrics-monitor.ruijie.com.cn/\">夜莺</a> ，使用自己的OA账号直接登录  </p>\n<p>安装n9e-agentd（注意：服务器是centos7）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#96;curl -s http:&#x2F;&#x2F;116.85.64.82&#x2F;install_n9e_agentd.sh|bash</code></pre>\n<p>通过下面命令查看n9e-agentd的进程，如果进程存在，说明启动成功<br>如果启动失败，可通过<code>journalctl -u n9e-agentd -f</code>查看日志</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ps -ef|grep n9e-agentd|grep -v grep</code></pre>\n<p>安装完成之后 修改&#x2F;opt&#x2F;n9e&#x2F;agentd&#x2F;etc&#x2F;agentd.yaml中的服务端连接地址（搜索endpoint关键字），然后重启n9e-agentd即可</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi &#x2F;opt&#x2F;n9e&#x2F;agentd&#x2F;etc&#x2F;agentd.yaml&#96;\n\n# 修改endpoint\nendpoints:\n  - http:&#x2F;&#x2F;metrics-monitor.ruijie.com.cn:8000\n  \n # 重启n9e-agentd\n systemctl restart n9e-agentd&#96; </code></pre>\n\n\n<h2 id=\"配置告警\"><a href=\"#配置告警\" class=\"headerlink\" title=\"配置告警\"></a>配置告警</h2><p>创建策略分组，然后在分组下新建告警策略  </p>\n<h1 id=\"中间件监控\"><a href=\"#中间件监控\" class=\"headerlink\" title=\"中间件监控\"></a>中间件监控</h1><p>访问地址： <a href=\"http://metrics-monitor.ruijie.com.cn/\">夜莺</a> ，使用自己的OA账号直接登录  </p>\n<h2 id=\"接入Mysql监控\"><a href=\"#接入Mysql监控\" class=\"headerlink\" title=\"接入Mysql监控\"></a>接入Mysql监控</h2><p>下载<a href=\"https://github.com/prometheus/mysqld_exporter/releases/download/v0.13.0/mysqld_exporter-0.13.0.linux-amd64.tar.gz\">mysqld_exporter</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#96;tar -xvf mysqld_exporter-0.13.0.linux-amd64.tar.gz\nmv mysqld_exporter-0.13.0.linux-amd64 mysqld_exporter\ncd mysqld_exporter\n# 创建mysql连接配置文件\n&#96;&#96;&#96;confid\nvi .my.cnf\n[client]\nhost&#x3D;127.0.0.1\nport&#x3D;3306\nuser&#x3D;root\npassword&#x3D;root\n\n# 创建 systemd unit 文件\n&#96;vi &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;mysqld_exporter.service&#96;\n\n[Unit]\nDescription&#x3D;mysqld_exporter\nDocumentation&#x3D;https:&#x2F;&#x2F;prometheus.io&#x2F;\nAfter&#x3D;network.target\n\n[Service]\nType&#x3D;simple\nUser&#x3D;root\nExecStart&#x3D;&#x2F;home&#x2F;mysqld_exporter&#x2F;mysqld_exporter --config.my-cnf&#x3D;&#x2F;home&#x2F;mysqld_exporter&#x2F;.my.cnf\nRestart&#x3D;on-failure\n\n[Install]\nWantedBy&#x3D;multi-user.target&#96; </code></pre>\n<p>启动服务</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl daemon-reload\nsystemctl enable mysqld_exporter.service\nsystemctl start mysqld_exporter.service</code></pre>\n<p>运行状态</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl status mysqld_exporter.service</code></pre>\n\n<p>正常起来后就可以访问<a href=\"http://ip:9104/metrics\">http://IP:9104/metrics</a>  </p>\n<h3 id=\"配置Promethues-Job\"><a href=\"#配置Promethues-Job\" class=\"headerlink\" title=\"配置Promethues Job\"></a>配置Promethues Job</h3><p>1 创建mysql-exporter.json文件</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#96;&#123;\n  &quot;ID&quot;: &quot;xxx-mysql-xx&quot;, &#x2F;&#x2F; 项目名-mysql-服务器ip\n  &quot;Name&quot;: &quot;xxx-mysql-xx&quot;,\n  &quot;Tags&quot;: [\n    &quot;mysql-exporter&quot; &#x2F;&#x2F; 类型\n  ],\n  &quot;Address&quot;: &quot;172.16.22.xxx&quot;, mysql服务器ip\n  &quot;Port&quot;: 9104, &#x2F;&#x2F; mysqld-exporter 暴露的端口\n  &quot;Meta&quot;: &#123;\n    &quot;app&quot;: &quot;ces-mysql-109&quot;,\n    &quot;team&quot;: &quot;tow_group&quot;,\n    &quot;project&quot;: &quot;ces&quot;\n  &#125;,\n  &quot;EnableTagOverride&quot;: false,\n  &quot;Check&quot;: &#123;\n    &quot;HTTP&quot;: &quot;http:&#x2F;&#x2F;172.16.22.109:9104&#x2F;metrics&quot;, &#x2F;&#x2F; mysqld-exporter 暴露的地址\n    &quot;Interval&quot;: &quot;10s&quot;\n  &#125;,\n  &quot;Weights&quot;: &#123;\n    &quot;Passing&quot;: 10,\n    &quot;Warning&quot;: 1\n  &#125;\n&#125;&#96; </code></pre>\n<p>2 注册到consul中心  </p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">curl --request PUT --data @mysql-exporter.json http:&#x2F;&#x2F;172.16.36.32:8500&#x2F;v1&#x2F;agent&#x2F;service&#x2F;register?replace-existing-checks&#x3D;1</code></pre>\n<p>3 查看地址<br><a href=\"http://172.16.36.32:8500/ui/dc1/services\">consul</a></p>\n<p>确认是否拉取到target<br><a href=\"http://metrics-monitor.ruijie.com.cn:9090/targets\">Promethues</a></p>\n<h3 id=\"看板展示\"><a href=\"#看板展示\" class=\"headerlink\" title=\"看板展示\"></a>看板展示</h3><h3 id=\"配置告警-1\"><a href=\"#配置告警-1\" class=\"headerlink\" title=\"配置告警\"></a>配置告警</h3><h2 id=\"接入Redis监控\"><a href=\"#接入Redis监控\" class=\"headerlink\" title=\"接入Redis监控\"></a>接入Redis监控</h2><h2 id=\"接入ElasticSearch监控\"><a href=\"#接入ElasticSearch监控\" class=\"headerlink\" title=\"接入ElasticSearch监控\"></a>接入ElasticSearch监控</h2><h2 id=\"接入健康巡检\"><a href=\"#接入健康巡检\" class=\"headerlink\" title=\"接入健康巡检\"></a>接入健康巡检</h2><h3 id=\"配置Job\"><a href=\"#配置Job\" class=\"headerlink\" title=\"配置Job\"></a>配置Job</h3><p>修改配置文件，请提供项目的健康监测地址，如：<a href=\"https://www.ruijie.com.cn/demo/healthcheck%EF%BC%8C%E9%85%8D%E7%BD%AE%E5%AE%8C%E6%88%90%E5%90%8E%E5%8D%B3%E5%8F%AF%E5%9C%A8[Grafana](http://metrics-monitor.ruijie.com.cn:3000/d/xtkCtBkiz/jian-kang-xun-jian-da-ping-kan-ban?orgId=1&amp;refresh=10s)%E4%B8%AD%E6%9F%A5%E7%9C%8B\">https://www.ruijie.com.cn/demo/healthcheck，配置完成后即可在[Grafana](http://metrics-monitor.ruijie.com.cn:3000/d/xtkCtBkiz/jian-kang-xun-jian-da-ping-kan-ban?orgId=1&amp;refresh=10s)中查看</a>  </p>\n<h3 id=\"配置告警-2\"><a href=\"#配置告警-2\" class=\"headerlink\" title=\"配置告警\"></a>配置告警</h3><p>先创建策略分组，策略分组名称以（业务组-项目名称）命名 然后再当前策略分组下新建告警策略</p>\n<h2 id=\"接入Spring-Boot监控\"><a href=\"#接入Spring-Boot监控\" class=\"headerlink\" title=\"接入Spring Boot监控\"></a>接入Spring Boot监控</h2><h3 id=\"修改应用的依赖及配置\"><a href=\"#修改应用的依赖及配置\" class=\"headerlink\" title=\"修改应用的依赖及配置\"></a>修改应用的依赖及配置</h3><h4 id=\"步骤1：修改-pom-依赖\"><a href=\"#步骤1：修改-pom-依赖\" class=\"headerlink\" title=\"步骤1：修改 pom 依赖\"></a>步骤1：修改 pom 依赖</h4><p>项目中已经引用 spring-boot-starter-web 的基础上，在 pom.xml 文件中添加 actuator&#x2F;prometheus Maven 依赖项。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&#96;&lt;dependency&gt;\n  &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;\n  &lt;artifactId&gt;spring-boot-starter-actuator&lt;&#x2F;artifactId&gt;\n&lt;&#x2F;dependency&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;io.micrometer&lt;&#x2F;groupId&gt;\n  &lt;artifactId&gt;micrometer-registry-prometheus&lt;&#x2F;artifactId&gt;\n&lt;&#x2F;dependency&gt;&#96; </code></pre>\n<h4 id=\"步骤2：修改配置\"><a href=\"#步骤2：修改配置\" class=\"headerlink\" title=\"步骤2：修改配置\"></a>步骤2：修改配置</h4><p>编辑 resources 目录下的 application.yml 文件，修改 actuator 相关的配置来暴露 Prometheus 协议的指标数据。</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">&#96;management:\n  endpoints:\n    web:\n      exposure:\n        include: prometheus  # 打开 Prometheus 的 Web 访问 Path\n  metrics:\n    # 下面选项建议打开，以监控 http 请求的 P99&#x2F;P95 等，具体的时间分布可以根据实际情况设置\n    distribution:\n      sla:\n        http:\n          server:\n            requests: 1ms,5ms,10ms,50ms,100ms,200ms,500ms,1s,5s\n    # 在 Prometheus 中添加特别的 Labels\n    tags:\n      # 必须加上对应的应用名，因为需要以应用的维度来查看对应的监控\n      application: spring-boot-mvc-demo&#96; </code></pre>\n<h4 id=\"步骤3：本地验证\"><a href=\"#步骤3：本地验证\" class=\"headerlink\" title=\"步骤3：本地验证\"></a>步骤3：本地验证</h4><p>在项目当前目录下，运行 mvn spring-boot:run 之后，可以通过 <a href=\"http://localhost:8080/actuator/prometheus\">http://localhost:8080/actuator/prometheus</a> 访问到 Prometheus 协议的指标数据，说明相关的依赖配置已经正确。</p>\n<h2 id=\"其他-Exporter-接入\"><a href=\"#其他-Exporter-接入\" class=\"headerlink\" title=\"其他 Exporter 接入\"></a>其他 Exporter 接入</h2><p>如果所使用的基础组件还没有提供相应的集成方式，可以参考如下方式进行集成，及自定义监控大屏来满足相应的监控需求。<br><a href=\"https://prometheus.io/docs/instrumenting/exporters/\">开源社区 Exporter 列表</a></p>\n<h1 id=\"链路跟踪监控\"><a href=\"#链路跟踪监控\" class=\"headerlink\" title=\"链路跟踪监控\"></a>链路跟踪监控</h1><h3 id=\"升级项目中的Dockerfile\"><a href=\"#升级项目中的Dockerfile\" class=\"headerlink\" title=\"升级项目中的Dockerfile\"></a>升级项目中的Dockerfile</h3><p>将 项目 &gt; docker &gt; Dockerfile 替换为以下内容，然后从新发布应用</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">FROM  registry.choerodon.ruijie.com.cn&#x2F;cibase&#x2F;jdk:1.8.0-v5\n \nRUN mkdir -p &#x2F;usr&#x2F;local&#x2F;app \\\\\n    &amp;&amp; mkdir -p &#x2F;data&#x2F;logs \n\t\nCOPY  app.jar &#x2F;usr&#x2F;local&#x2F;app&#x2F;\n\nENV app_run_in_docker_registerport 80\n\nENV LANG C.UTF-8 \n\nEXPOSE 8080</code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">CMD [&quot;&#x2F;var&#x2F;java&#x2F;bin&#x2F;java&quot;,&quot;-Dserver.port&#x3D;8080&quot;,&quot;-jar&quot;,&quot;&#x2F;usr&#x2F;local&#x2F;app&#x2F;app.jar&quot;]\nCMD &#x2F;var&#x2F;java&#x2F;bin&#x2F;java -javaagent:&#x2F;usr&#x2F;local&#x2F;app&#x2F;skywalking_agent_zy&#x2F;skywalking-agent.jar -Dskywalking.agent.service_name&#x3D;$&#123;release&#125; -Dskywalking.collector.backend_service&#x3D;$&#123;sywalkingService&#125; -Dspring.profiles.active&#x3D;$&#123;env&#125; -Dserver.port&#x3D;8080 -jar &#x2F;usr&#x2F;local&#x2F;app&#x2F;app.jar&#96; </code></pre>\n<h3 id=\"服务查看\"><a href=\"#服务查看\" class=\"headerlink\" title=\"服务查看\"></a>服务查看</h3><p>进入 <a href=\"http://trace.ruijie.com.cn:8080/\">skywalking</a> 查看监控状态<br><img src=\"https://s2.loli.net/2022/02/17/FK7fmrJbVvHjhQD.png\"></p>\n<h1 id=\"k8s监控\"><a href=\"#k8s监控\" class=\"headerlink\" title=\"k8s监控\"></a>k8s监控</h1><p>访问<a href=\"http://metrics-monitor.ruijie.com.cn:3000/\">Grafana</a>  </p>\n<h2 id=\"前端监控\"><a href=\"#前端监控\" class=\"headerlink\" title=\"前端监控\"></a>前端监控</h2><h3 id=\"Vue接入webfunny\"><a href=\"#Vue接入webfunny\" class=\"headerlink\" title=\"Vue接入webfunny\"></a>Vue接入webfunny</h3><p>访问地址：<a href=\"https://captcha.ruijie.com.cn/webfunny/home.html\">前端监控</a></p>\n<h3 id=\"添加平台用户\"><a href=\"#添加平台用户\" class=\"headerlink\" title=\"添加平台用户\"></a>添加平台用户</h3><ul>\n<li>自行注册</li>\n</ul>\n<h3 id=\"添加监控探针\"><a href=\"#添加监控探针\" class=\"headerlink\" title=\"添加监控探针\"></a>添加监控探针</h3><p> 1、 在vue前端index.html中增加探针<br><img src=\"https://s2.loli.net/2022/02/17/JdsuhDG2WmtULwg.png\" alt=\"image.png\"><br>3、 探针地址改为</p>\n<p><code>https://captcha.ruijie.com.cn/webfunny/w.js</code> </p>\n<p>4、 当然可以根据构建环境去添加探针</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#96;&lt;% if (process.env.NODE_ENV !&#x3D;&#x3D; &#39;development&#39;) &#123; %&gt;      &lt;script&gt;      (function(f)&#123;var e&#x3D;f.sessionStorage;if(e)&#123;e.CUSTOMER_WEB_MONITOR_ID&#x3D;&quot;【探针ID】&quot;;var d&#x3D;document.createElement(&quot;script&quot;);d.async&#x3D;1;d.src&#x3D;&quot;https:&#x2F;&#x2F;captcha.ruijie.com.cn&#x2F;webfunny&#x2F;w.js&quot;;var g&#x3D;document.getElementsByTagName(&quot;script&quot;)[0];g.parentNode.insertBefore(d,g)&#125;&#125;)(window);      &lt;&#x2F;script&gt;     &lt;% &#125; %&gt;&#96; </code></pre>\n<p>访问<a href=\"https://captcha.ruijie.com.cn/webfunny/home.html\">前端监控</a>即可查看监控内容<br><img src=\"https://s2.loli.net/2022/02/17/c97JADYhQgd5rRT.png\" alt=\"image.png\"></p>\n<h2 id=\"自定义指标告警\"><a href=\"#自定义指标告警\" class=\"headerlink\" title=\"自定义指标告警\"></a>自定义指标告警</h2><p>自定义指标主动上报<br>直接看使用curl命令上报数据的例子即可，如果是其他语言翻译一下就完了。监控指标组织为json list格式，放到http request body中，post给n9e-server即可。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#96;&#96;#!&#x2F;bin&#x2F;bash\n[[author]]:lixiang\n[[email]]:xiang_li@ruijie.com.cn\n\n[[http]]上报指标示例\n\nurl&#x3D;&quot;http:&#x2F;&#x2F;metrics-monitor.ruijie.com.cn:8000&#x2F;v1&#x2F;n9e&#x2F;push&quot;   # 请求接口\nmetric&#x3D;&quot;mysql_back_status&quot;        # 指标名称\nvalue&#x3D;1                   # 值\ntimestamp&#x3D;&#96;date +%s&#96;      # 时间戳\n\n#请求参数\nbody&#x3D;&#39;[&#123;\n  &quot;metric&quot;: &quot;&#39;$&#123;metric&#125;&#39;&quot;,\n  &quot;value&quot;: &#39;$&#123;value&#125;&#39;,\n  &quot;tags&quot;: &#123;\n            &quot;system-name&quot;: &quot;ecp&quot;\n        &#125;,\n  &quot;time&quot;: &#39;$&#123;timestamp&#125;&#39;\n&#125;]&#39;\n\necho -e &quot;请求参数:\\n $body \\n\\n返回结果:&quot;\n&#96;&#96;&#96;sh\n#发送请求\ncurl -X POST &quot;$url&quot; \\\n    -H &#39;Content-Type: application&#x2F;json&#39; \\\n    -d &quot;$body&quot;&#96;&#96; </code></pre>\n<p>其中各个字段的含义参考《 「DataModel」- <a href=\"https://n9e.didiyun.com/docs/appendix/datamodel/\">https://n9e.didiyun.com/docs/appendix/datamodel/</a> 》一章，ident、alias字段是可选的，很多情形的监控数据是没法和设备关联在一起的，比如某个域名的证书过期时间，这种监控数据就可以不传ident、alias字段。  </p>\n<p>配置告警<br>上一步中我们自定义了一个指标为mysql_back_status，然后在告警策略中定义  </p>\n<h2 id=\"未来规划\"><a href=\"#未来规划\" class=\"headerlink\" title=\"未来规划\"></a>未来规划</h2><ul>\n<li>高可用</li>\n<li>动态化导入job</li>\n<li>告警规则</li>\n</ul>\n<p>http<br><a href=\"https://grafana.com/grafana/dashboards/7587\">https://grafana.com/grafana/dashboards/7587</a></p>\n<p>mysql</p>\n<p>【END】</p>\n","text":"前言 随着应用容器化和微服务的兴起，借由 Docker和 Kubernetes等工具，服务的快速开发和部署成为可能，构建微服务应用变得越来越简单。但是随着大型单体应用拆分为微服务，服务之间的依赖和调用变得极为复杂，这些服务可能是不同团队开发的，可能基于不同的语言，微服务之间可能是...","link":"","photos":[],"count_time":{"symbolsCount":"9.2k","symbolsTime":"8 mins."},"categories":[{"name":"Cloud-Native","slug":"Cloud-Native","count":6,"path":"api/categories/Cloud-Native.json"}],"tags":[{"name":"DeepFlow","slug":"DeepFlow","count":2,"path":"api/tags/DeepFlow.json"},{"name":"可观测性","slug":"可观测性","count":2,"path":"api/tags/可观测性.json"},{"name":"skywalking","slug":"skywalking","count":1,"path":"api/tags/skywalking.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Metrices\"><span class=\"toc-text\">Metrices</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Tracing\"><span class=\"toc-text\">Tracing</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%9B%91%E6%8E%A7%E8%8C%83%E5%9B%B4\"><span class=\"toc-text\">监控范围</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9B%91%E6%8E%A7\"><span class=\"toc-text\">服务器监控</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85agentd\"><span class=\"toc-text\">安装agentd</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E5%91%8A%E8%AD%A6\"><span class=\"toc-text\">配置告警</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%AD%E9%97%B4%E4%BB%B6%E7%9B%91%E6%8E%A7\"><span class=\"toc-text\">中间件监控</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%85%A5Mysql%E7%9B%91%E6%8E%A7\"><span class=\"toc-text\">接入Mysql监控</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AEPromethues-Job\"><span class=\"toc-text\">配置Promethues Job</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9C%8B%E6%9D%BF%E5%B1%95%E7%A4%BA\"><span class=\"toc-text\">看板展示</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E5%91%8A%E8%AD%A6-1\"><span class=\"toc-text\">配置告警</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%85%A5Redis%E7%9B%91%E6%8E%A7\"><span class=\"toc-text\">接入Redis监控</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%85%A5ElasticSearch%E7%9B%91%E6%8E%A7\"><span class=\"toc-text\">接入ElasticSearch监控</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%85%A5%E5%81%A5%E5%BA%B7%E5%B7%A1%E6%A3%80\"><span class=\"toc-text\">接入健康巡检</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AEJob\"><span class=\"toc-text\">配置Job</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E5%91%8A%E8%AD%A6-2\"><span class=\"toc-text\">配置告警</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%85%A5Spring-Boot%E7%9B%91%E6%8E%A7\"><span class=\"toc-text\">接入Spring Boot监控</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E5%BA%94%E7%94%A8%E7%9A%84%E4%BE%9D%E8%B5%96%E5%8F%8A%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">修改应用的依赖及配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A41%EF%BC%9A%E4%BF%AE%E6%94%B9-pom-%E4%BE%9D%E8%B5%96\"><span class=\"toc-text\">步骤1：修改 pom 依赖</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A42%EF%BC%9A%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">步骤2：修改配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A5%E9%AA%A43%EF%BC%9A%E6%9C%AC%E5%9C%B0%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">步骤3：本地验证</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96-Exporter-%E6%8E%A5%E5%85%A5\"><span class=\"toc-text\">其他 Exporter 接入</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%93%BE%E8%B7%AF%E8%B7%9F%E8%B8%AA%E7%9B%91%E6%8E%A7\"><span class=\"toc-text\">链路跟踪监控</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%87%E7%BA%A7%E9%A1%B9%E7%9B%AE%E4%B8%AD%E7%9A%84Dockerfile\"><span class=\"toc-text\">升级项目中的Dockerfile</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E6%9F%A5%E7%9C%8B\"><span class=\"toc-text\">服务查看</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#k8s%E7%9B%91%E6%8E%A7\"><span class=\"toc-text\">k8s监控</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF%E7%9B%91%E6%8E%A7\"><span class=\"toc-text\">前端监控</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vue%E6%8E%A5%E5%85%A5webfunny\"><span class=\"toc-text\">Vue接入webfunny</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E5%B9%B3%E5%8F%B0%E7%94%A8%E6%88%B7\"><span class=\"toc-text\">添加平台用户</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E7%9B%91%E6%8E%A7%E6%8E%A2%E9%92%88\"><span class=\"toc-text\">添加监控探针</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8C%87%E6%A0%87%E5%91%8A%E8%AD%A6\"><span class=\"toc-text\">自定义指标告警</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%AA%E6%9D%A5%E8%A7%84%E5%88%92\"><span class=\"toc-text\">未来规划</span></a></li></ol></li></ol>","author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"DeepFlow安装","uid":"880573b75c369c317bbd9d9133cf8195","slug":"DeepFlow","date":"2021-09-18T16:00:00.000Z","updated":"2022-11-02T07:22:26.227Z","comments":true,"path":"api/articles/DeepFlow.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159420/4k-dramatic-sunset-over-blidinje-wallpapers-159420-21801-1335455.png","text":"install Q&amp;A关于IPV4还是IPV6的问题 单个k8s集群（v1.22.10）通过helm（v3.9.0）部署deepflow，使用value文件指定默认SC，3个PVC状态均正常。问题：server、mysql、grafana、app4个pod均异常。 查看日...","link":"","photos":[],"count_time":{"symbolsCount":"7.2k","symbolsTime":"7 mins."},"categories":[{"name":"Cloud-Native","slug":"Cloud-Native","count":6,"path":"api/categories/Cloud-Native.json"}],"tags":[{"name":"安装手册","slug":"安装手册","count":2,"path":"api/tags/安装手册.json"},{"name":"DeepFlow","slug":"DeepFlow","count":2,"path":"api/tags/DeepFlow.json"},{"name":"可观测性","slug":"可观测性","count":2,"path":"api/tags/可观测性.json"}],"author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"通过自建DevSecOps环境学习","uid":"b970fe5bee1957a85fe7360386c990fe","slug":"通过自建DevSecOps环境学习","date":"2021-08-20T06:20:21.000Z","updated":"2022-10-27T02:40:56.148Z","comments":true,"path":"api/articles/通过自建DevSecOps环境学习.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159416/4k-beneath-the-clouds-wallpapers-159416-909591-7848524.png","text":"前导知识 版本控制系统：Git Jenkins 持续集成与持续交付：CI&#x2F;CD 制品仓库管理：Artifactory、Nexus IaC，基础设施管理配置管理工具 公有云私有云相关技术组件 DevSecOps平台搭建DevSecOps-StudioDevSecOps-S...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"DevSecOps","slug":"DevSecOps","count":3,"path":"api/categories/DevSecOps.json"}],"tags":[{"name":"CI/CD","slug":"CI-CD","count":4,"path":"api/tags/CI-CD.json"},{"name":"Jenkins","slug":"Jenkins","count":2,"path":"api/tags/Jenkins.json"},{"name":"DevSecOps","slug":"DevSecOps","count":3,"path":"api/tags/DevSecOps.json"},{"name":"实验环境","slug":"实验环境","count":1,"path":"api/tags/实验环境.json"},{"name":"Vagrant","slug":"Vagrant","count":1,"path":"api/tags/Vagrant.json"}],"author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}