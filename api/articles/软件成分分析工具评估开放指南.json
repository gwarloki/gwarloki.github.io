{"title":"软件成分分析工具评估开放指南","uid":"0f4f52fd9bba6992ed16037b649e9241","slug":"软件成分分析工具评估开放指南","date":"2022-10-26T01:08:35.000Z","updated":"2022-10-26T01:42:27.527Z","comments":true,"path":"api/articles/软件成分分析工具评估开放指南.json","keywords":null,"cover":null,"content":"<h1 id=\"1-介绍\"><a href=\"#1-介绍\" class=\"headerlink\" title=\"1.介绍\"></a>1.介绍</h1><p>   借助软件成分分析（SCA）工具，软件开发团队能从许可证合规和安全漏洞角度跟踪和分析引入到项目里的任何开源代码。这样的工具发现开源代码（不同程度的细节和功能），他们直接和间接依赖、许可证有效性，和任何已知的安全漏洞及潜在的攻击。好多公司提供软件成分分析（SCA）工具套装、开源工具、作为社区项目驱动的相关服务。总有关于什么工具最适合特定的模型和环境的问题，缺少对比和评估工具的标准方法，很难回答这个问题。因此，本文的目标是推荐一系列对比指标，用以评价多个软件成分分析（SCA）工具。</p>\n<p>   本文是《企业中开源软件合规性》（第二版）一书中第12章的重大更新版。这本书记录和发布了对比及评估软件成分分析（SCA）工具的指标，搜集反馈、推动建立对比和评测的标准化模型。请注意，没有“一劳永逸”的方案，在市场上有许多工具，具有不同功能、成熟度水平、部署模型等。当你开始这段旅程时，我们强烈推荐你根据特定环境和要求，确定最想要的功能，然后根据这些指标对工具进行测试和评分。</p>\n<h1 id=\"2-评估指标\"><a href=\"#2-评估指标\" class=\"headerlink\" title=\"2.评估指标\"></a>2.评估指标</h1><h2 id=\"2-1-知识库\"><a href=\"#2-1-知识库\" class=\"headerlink\" title=\"2.1. 知识库\"></a>2.1. 知识库</h2><ul>\n<li><p>知识库的大小通常以开源项目的数量和跟踪文件的数量来衡量。知识库存储开源软件的信息，数据库越大，当你扫描时，就能识别更多的开源代码。</p>\n</li>\n<li><p>列出跟踪的主要库（如所有NPM，SourceForge等）</p>\n</li>\n<li><p>跟踪哪些生态系统（如R，Delphi等）</p>\n</li>\n<li><p>范围中包括什么语言（基于扩展和库类型）。理想情况是，扫描器应该和语言无关；然而，基本没有厂商提供这种支持，因此需要澄清支持什么语言</p>\n</li>\n<li><p>区分包之间的检测级别（如Maven和“Java”支持，例如，你能发现jar依赖，但实际上不扫描.java源文件的版权&#x2F;许可证信息）</p>\n</li>\n<li><p>知识库更新频率。频率高的更新更受欢迎，和开源软件的发展保持一致。合规服务和工具提供商有定期更新他们的数据库。有的公司每年更新三到四次，其他公司则频率更高（直到每天），理想情况下，你希望有最大和最新的数据库，增加识别新发布的开源代码的机会。</p>\n</li>\n<li><p>一个客户的需求多久能被添加到知识库中，对客户需求响应有服务水平协议（SLA）吗？流程是什么？</p>\n</li>\n</ul>\n<h2 id=\"2-2-检测能力\"><a href=\"#2-2-检测能力\" class=\"headerlink\" title=\"2.2. 检测能力\"></a>2.2. 检测能力</h2><ul>\n<li><p>整体组件</p>\n</li>\n<li><p>纠正&#x2F;配置分析器的能力-软件项目很复杂，有不同的构建步骤，需要一个方法去配置工具，捕获现实</p>\n</li>\n<li><p>检测使用的方法是什么？不同的分析方法各有优缺点，工具生成者应该总结每个使用的扫描器，如何帮助检测。</p>\n</li>\n<li><p>部分片段-从几行到部分文件</p>\n</li>\n<li><p>提供什么选项来纠正和验证结果？支持结果排序功能吗（例如P1或严重级）？</p>\n</li>\n<li><p>自动识别具有正确来源和许可证的代码，不需要合规工程师操作工具来判断什么是正确的匹配，什么是误报。许多源代码扫描引擎，特别是支持片段扫描，能够生成相当数量的误报，需要调查和手动解决。误报率导致的大量人力消耗，是今天市场上很多最出名产品一直存在的问题。当评估这样的产品时，我们推荐优先考虑能自动识别源代码片段，具有需要手动检查的最小误报率。</p>\n</li>\n<li><p>支持哪种类型的分析（包检测，精确文件类型检测，用来发现单个源文件、二进制文件、多媒体文件）</p>\n</li>\n<li><p>源代码扫描（代码-&gt;属于哪个开源软件包）？</p>\n</li>\n<li><p>二进制扫描（二进制-&gt;属于哪个开源软件包）？</p>\n</li>\n<li><p>片段扫描（代码片段-&gt;拷贝于哪个开源软件包）？</p>\n</li>\n<li><p>依赖扫描（代码-&gt; 通过包管理器，包含哪个依赖）？</p>\n</li>\n<li><p>许可证扫描（代码-&gt;开源软件许可证）</p>\n</li>\n<li><p>支持什么语言?如果支持某种语言，也支持片段分析吗？仅限于包水平吗？精确文件匹配？</p>\n</li>\n<li><p>安全扫描器（代码-&gt;漏洞？）</p>\n</li>\n<li><p>其他漏洞检测技术，包括搜索术语，电子邮件&#x2F;URL检测，web服务检测等</p>\n</li>\n</ul>\n<h2 id=\"2-3易用性\"><a href=\"#2-3易用性\" class=\"headerlink\" title=\"2.3易用性\"></a>2.3易用性</h2><p>易用性很重要，因为如果你所有的工程师要访问和使用扫描工具（而不是仅限合规工程师），你可以在合规问题出现之前和工程师使用构建工具集成新代码之前，避免合规问题，你将想要一个容易使用的工具，最小化学习曲线，避免高成本专业培训。</p>\n<ul>\n<li><p>直观的设计和用户界面</p>\n</li>\n<li><p>本地客户端或浏览器插件可用</p>\n</li>\n<li><p>移动用户可用</p>\n</li>\n<li><p>要求最小或不需要培训，培训用来“了解如何检查和评估结果”。请注意，易用性是一个非常主观的标准，很难量化或定性。然而，一些工具确实比其他工具更易于使用。</p>\n</li>\n</ul>\n<p> </p>\n<h2 id=\"2-4-操作功能\"><a href=\"#2-4-操作功能\" class=\"headerlink\" title=\"2.4. 操作功能\"></a>2.4. 操作功能</h2><ul>\n<li><p>源代码扫描速度：源代码扫描的速度是今天市场上许多产品的痛点。例如，一个公司设计和开发了自己的数据库，非常适合操作这种类型的数据。因此，他们有一个闪电般扫描速度，比其他现有工具都快。此外，当你把持续集成流程和扫描器集成时，扫描速度特别有用。需要注意的地方，一个是文件被跳过时速度问题，另一个问题是，是否真正执行了版权和许可证检测，或仅仅扫描库&#x2F;包管理文件，如pom.xml文件。</p>\n</li>\n<li><p>使用工具进行和收购活动相关的扫描，在使用模式上不要有许可证锁定。一些厂商通过许可证协议，只允许扫描和当前项目有关的代码，对这之外的使用场景加以限制。你需要清楚这个事实，确信你能充分使用该工具，例如，对你公司正在考虑的任何并购交易。</p>\n</li>\n<li><p>编程语言无关：一些工具创建者承认，他们的产品非常擅长某种编程语言，但对其他的则不行。这很有趣，因为你希望任何扫描和识别引擎都应该和编程语言无关，大多数工具并非如此，几乎没有和语言无关的。</p>\n</li>\n<li><p>整个组织中，重复使用扫描澄清（scan clarification）的功能。</p>\n</li>\n<li><p>和构建系统（CD&#x2F;CI）无关。。</p>\n</li>\n</ul>\n<h2 id=\"2-5-集成功能\"><a href=\"#2-5-集成功能\" class=\"headerlink\" title=\"2.5 集成功能\"></a>2.5 集成功能</h2><ul>\n<li><p>提供容易集成的API，和命令行接口（CLI）：使用扫描工具的方式不仅限于用户界面。理想情况，公司希望工具和他们当前的开发、构建及流程集成到一起。如果扫描工具支持API，CLI将允许系统管理员和用户界面之外的工具交互，这样的场景是可行的。。</p>\n</li>\n<li><p>支持用户界面（UI）集成功能。</p>\n</li>\n<li><p>将组织的合规策略集成到工具内，当和声明的策略及规则有关时，具有规则标记码（flag code）。</p>\n</li>\n</ul>\n<h2 id=\"2-6-安全漏洞数据库\"><a href=\"#2-6-安全漏洞数据库\" class=\"headerlink\" title=\"2.6.  安全漏洞数据库\"></a>2.6.  安全漏洞数据库</h2><ul>\n<li><p>漏洞数据库的规模-所有项目中跟踪的漏洞数量：数据库包含已知漏洞信息，能支持工具检测源代码中安全相关的问题。请注意“源代码”一词，没有特别指定是开源组件或第三方组件。如果复制的代码包含已知安全漏洞，当你扫描私有组件时，你的引擎应该能标记这个漏洞。</p>\n</li>\n<li><p>漏洞数据库更新频率：服务提供商定期更新他们的数据库，更新周期越短，也就能更好地发现漏洞。</p>\n</li>\n<li><p>漏洞信息源的数量：多个信息源能够充实开源组件中安全漏洞数据库。当评估提供这个服务的合规工具时，我们推荐调查这个方面和探索实际上的更新机制。使用各种信息源（直接和间接）来收集安全漏洞的信息，在这个基础上，提出修复这些漏洞的建议。</p>\n</li>\n<li><p>工具提供商为验证漏洞报警，而从事的任何其他研究。</p>\n</li>\n<li><p>精确度（漏洞被正确识别的比率）。有四个级别的准确率。</p>\n</li>\n</ul>\n<p>  - 1 存在漏洞的软件已经被正确地对应到我们私有软件中实际使用的依赖项<br>  - 2 依赖项用在重要的环境（运行时）。<br>  - 3 在重要环境中的私有软件调用了依赖项的漏洞部分。<br>  - 4 漏洞可被攻破。</p>\n<ul>\n<li><p>召回率（recall）（发现了多少潜在的真实漏洞，并正确匹配到私有软件？）。实际上，这不可能知道。对比不同的解决方案，对特定的技术栈，估计什么方案具有最高的召回率。</p>\n</li>\n<li><p>上下文相关的漏洞排序功能。常见漏洞严重性排名，如CVSS3，由于私有软件的环境，可能不准确。用户应该能够关联漏洞的严重性来排序，以便更准确解决安全威胁。</p>\n</li>\n</ul>\n<h2 id=\"2-7高级漏洞发现方法\"><a href=\"#2-7高级漏洞发现方法\" class=\"headerlink\" title=\"2.7高级漏洞发现方法\"></a>2.7高级漏洞发现方法</h2><p>   <strong>支持高级漏洞发现，当有漏洞的代码复制到一个新组件时（要求支持源代码片段识别），识别漏洞。</strong></p>\n<h2 id=\"2-8-相关成本\"><a href=\"#2-8-相关成本\" class=\"headerlink\" title=\"2.8.相关成本\"></a>2.8.相关成本</h2><p><strong>需要考虑几个成本参数：</strong></p>\n<ul>\n<li><p>基础设施成本：IT 基础设施成本和自己安装或通过云使用有关。涉及到客户需要购买、安装和维护的服务器，包括升级基础设施费用，取决于规模、专门的系统管理员成本的多少。</p>\n</li>\n<li><p>运维成本：成本和管理工具提供的结果有关，涉及到检查和解释结果，采取合适的行动，自动识别误报的工具将降低人工确认上千个误报的人力成本。</p>\n</li>\n<li><p>每年许可证成本：使用工具的每年软件许可费用（每用户成本、或不限使用）。访问SDK成本，这样你能把扫描引擎和内部工具集成起来，以及任何您想要引入的功能、满足需求，定制化的成本。</p>\n</li>\n<li><p>和现有引擎&#x2F;IT工具和基础设施集成初始成本：集成费用很难估计，但他们主要是不断发展能力，把工具集成到工作流和流程中，最小中断。</p>\n</li>\n<li><p>导出项目和其他信息的能，可能是转移到一个新系统，或者是离开旧厂商保留知识。</p>\n</li>\n<li><p>绑定成本（如果你需要退出并采用其他方案时，需要考虑的成本因素）：当围绕着特定工具，打造整个合规环境，公司常常忽视或没有足够的重视绑定因素和成本。当选择一个新工具之初，我们建议在这个方面考虑周全。</p>\n</li>\n<li><p>符合特定需要的工程定制成本</p>\n</li>\n</ul>\n<h2 id=\"2-9-部署模型的支持\"><a href=\"#2-9-部署模型的支持\" class=\"headerlink\" title=\"2.9 部署模型的支持\"></a>2.9 部署模型的支持</h2><p>支持各种部署模型：</p>\n<ul>\n<li><p>本地</p>\n</li>\n<li><p>云</p>\n</li>\n<li><p>混合部署</p>\n</li>\n</ul>\n<p><strong>你的代码和项目留给网络什么信息？对最终用户要非常透明：</strong></p>\n<ul>\n<li><p>源代码和二进制文件内容</p>\n</li>\n<li><p>部分文件内容&#x2F;字符串</p>\n</li>\n<li><p>哈希值</p>\n</li>\n<li><p>编录清单</p>\n</li>\n<li><p>策略信息</p>\n</li>\n<li><p>合规&#x2F;不合规状态</p>\n</li>\n</ul>\n<h2 id=\"2-10-报告功能\"><a href=\"#2-10-报告功能\" class=\"headerlink\" title=\"2.10 报告功能\"></a>2.10 报告功能</h2><ul>\n<li><p>生成要求的合规通知：通知是基于实际扫描结果或者是仅仅从知识库拉取的许可证信息？</p>\n</li>\n<li><p>子组件和子文件是什么？通知中包括实际版权&#x2F;许可证吗？</p>\n</li>\n<li><p>开源代码片段的通知是什么？</p>\n</li>\n<li><p>支持各种报告功能-输出各种格式的报告，如Excel&#x2F;电子表格（Spreadsheet）（包括提供详细报告样本）</p>\n</li>\n<li><p>支持开放标准格式（软件包数据交换（software，package data exchange，SPDX），SARIF，CVE，CVSS等）</p>\n</li>\n</ul>\n<h1 id=\"概念解释\"><a href=\"#概念解释\" class=\"headerlink\" title=\"概念解释\"></a>概念解释</h1><h1 id=\"参考标准\"><a href=\"#参考标准\" class=\"headerlink\" title=\"参考标准\"></a>参考标准</h1><table>\n<thead>\n<tr>\n<th>Series &amp; Number</th>\n<th>Title</th>\n<th>Status</th>\n<th>Released</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>SP 800-218</td>\n<td>Secure Software Development Framework (SSDF) Version 1.1: Recommendations for Mitigating the Risk of Software Vulnerabilities</td>\n<td>Final</td>\n<td>02&#x2F;03&#x2F;2022</td>\n</tr>\n<tr>\n<td>SP 800-218 (Draft)</td>\n<td>Secure Software Development Framework (SSDF) Version 1.1: Recommendations for Mitigating the Risk of Software Vulnerabilities</td>\n<td>Draft</td>\n<td>09&#x2F;30&#x2F;2021</td>\n</tr>\n<tr>\n<td>White Paper NIST CSWP 13</td>\n<td>Mitigating the Risk of Software Vulnerabilities by Adopting a Secure Software Development Framework (SSDF)</td>\n<td>Withdrawn</td>\n<td>04&#x2F;23&#x2F;2020</td>\n</tr>\n</tbody></table>\n<h2 id=\"📚参考资料\"><a href=\"#📚参考资料\" class=\"headerlink\" title=\"📚参考资料\"></a>📚参考资料</h2><ul>\n<li>NIST.SP.800-218.pdf<a href=\"https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-218.pdf\">https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-218.pdf</a></li>\n<li>NIST.CSWP.04232020.pdf<a href=\"https://nvlpubs.nist.gov/nistpubs/CSWP/NIST.CSWP.04232020.pdf\">https://nvlpubs.nist.gov/nistpubs/CSWP/NIST.CSWP.04232020.pdf</a></li>\n</ul>\n","feature":true,"text":"1.介绍 借助软件成分分析（SCA）工具，软件开发团队能从许可证合规和安全漏洞角度跟踪和分析引入到项目里的任何开源代码。这样的工具发现开源代码（不同程度的细节和功能），他们直接和间接依赖、许可证有效性，和任何已知的安全漏洞及潜在的攻击。好多公司提供软件成分分析（SCA）工具套装、...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"SCA","slug":"SCA","count":4,"path":"api/tags/SCA.json"},{"name":"软件成分分析","slug":"软件成分分析","count":1,"path":"api/tags/软件成分分析.json"},{"name":"评估开放指南","slug":"评估开放指南","count":1,"path":"api/tags/评估开放指南.json"},{"name":"产品选型","slug":"产品选型","count":1,"path":"api/tags/产品选型.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1.介绍</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E8%AF%84%E4%BC%B0%E6%8C%87%E6%A0%87\"><span class=\"toc-text\">2.评估指标</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E7%9F%A5%E8%AF%86%E5%BA%93\"><span class=\"toc-text\">2.1. 知识库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E6%A3%80%E6%B5%8B%E8%83%BD%E5%8A%9B\"><span class=\"toc-text\">2.2. 检测能力</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-3%E6%98%93%E7%94%A8%E6%80%A7\"><span class=\"toc-text\">2.3易用性</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-4-%E6%93%8D%E4%BD%9C%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">2.4. 操作功能</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-5-%E9%9B%86%E6%88%90%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">2.5 集成功能</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-6-%E5%AE%89%E5%85%A8%E6%BC%8F%E6%B4%9E%E6%95%B0%E6%8D%AE%E5%BA%93\"><span class=\"toc-text\">2.6.  安全漏洞数据库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-7%E9%AB%98%E7%BA%A7%E6%BC%8F%E6%B4%9E%E5%8F%91%E7%8E%B0%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">2.7高级漏洞发现方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-8-%E7%9B%B8%E5%85%B3%E6%88%90%E6%9C%AC\"><span class=\"toc-text\">2.8.相关成本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-9-%E9%83%A8%E7%BD%B2%E6%A8%A1%E5%9E%8B%E7%9A%84%E6%94%AF%E6%8C%81\"><span class=\"toc-text\">2.9 部署模型的支持</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-10-%E6%8A%A5%E5%91%8A%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">2.10 报告功能</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A6%82%E5%BF%B5%E8%A7%A3%E9%87%8A\"><span class=\"toc-text\">概念解释</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%A0%87%E5%87%86\"><span class=\"toc-text\">参考标准</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%F0%9F%93%9A%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">📚参考资料</span></a></li></ol></li></ol>","author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"软件供应链安全分析工具-Dependency-Track","uid":"afb19c047533022f884066f88b6a2608","slug":"dependency-track","date":"2022-06-23T09:38:36.281Z","updated":"2022-10-26T01:44:14.447Z","comments":true,"path":"api/articles/dependency-track.json","keywords":null,"cover":[],"text":"dependency-track概述和背景[[SCA软件成分分析前期探索#OWASP Dependency-Track]] 部署DTquick-start[[SCA软件成分分析前期探索#部署]]docker安装版本为V3.8.0 K8S部署helm-charts前期准备：安装SC...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[],"tags":[{"name":"SCA","slug":"SCA","count":4,"path":"api/tags/SCA.json"},{"name":"部署手册","slug":"部署手册","count":2,"path":"api/tags/部署手册.json"},{"name":"SBOM","slug":"SBOM","count":2,"path":"api/tags/SBOM.json"},{"name":"OWASP","slug":"OWASP","count":1,"path":"api/tags/OWASP.json"},{"name":"dependency-track","slug":"dependency-track","count":1,"path":"api/tags/dependency-track.json"},{"name":"软件供应链","slug":"软件供应链","count":1,"path":"api/tags/软件供应链.json"}],"author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}