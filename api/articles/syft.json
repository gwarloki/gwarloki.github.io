{"title":"软件成分分析工具-syft","uid":"5d3847e382c5758f0e662a8985f6d419","slug":"syft","date":"2022-08-31T09:44:00.000Z","updated":"2022-10-26T09:05:01.983Z","comments":true,"path":"api/articles/syft.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159414/4k-backlit-dawn-wallpapers-159414-29480-2917846.png","content":"<h1 id=\"syft\"><a href=\"#syft\" class=\"headerlink\" title=\"syft\"></a>syft</h1><h2 id=\"0x01简介\"><a href=\"#0x01简介\" class=\"headerlink\" title=\"0x01简介\"></a>0x01简介</h2><p><a href=\"https://github.com/anchore/syft\">syft</a>GitHub about：CLI tool and library for generating a Software Bill of Materials from <strong>container images and filesystems</strong><br><strong>其他信息</strong></p>\n<ul>\n<li>项目由<a href=\"https://github.com/anchore\">anchore</a>开源</li>\n<li><a href=\"https://github.com/anchore/grype\">grype</a><br>![[SBOM工具介绍#Anchore]]</li>\n</ul>\n<h2 id=\"0x02架构图\"><a href=\"#0x02架构图\" class=\"headerlink\" title=\"0x02架构图\"></a>0x02<del>架构图</del></h2><p><img src=\"https://user-images.githubusercontent.com/5199289/136844524-1527b09f-c5cb-4aa9-be54-5aa92a6086c1.png\" alt=\"没有哈\"></p>\n<h2 id=\"0x03核心能力Features\"><a href=\"#0x03核心能力Features\" class=\"headerlink\" title=\"0x03核心能力Features\"></a>0x03核心能力Features</h2><ul>\n<li>Generates SBOMs for container images, filesystems, archives, and more to discover packages and libraries</li>\n<li>Supports OCI and Docker image formats</li>\n<li>Linux distribution identification</li>\n<li>Works seamlessly with <a href=\"https://github.com/anchore/grype\">Grype</a> (a fast, modern vulnerability scanner)</li>\n<li>Able to create signed SBOM attestations using the <a href=\"https://github.com/in-toto/attestation/blob/main/spec/README.md\">in-toto specification</a></li>\n<li>Convert between SBOM formats, such as CycloneDX, SPDX, and Syft’s own format.</li>\n</ul>\n<h2 id=\"0x04支持生态\"><a href=\"#0x04支持生态\" class=\"headerlink\" title=\"0x04支持生态\"></a>0x04支持生态</h2><ul>\n<li>Alpine (apk)</li>\n<li>C (conan)</li>\n<li>C++ (conan)</li>\n<li>Dart (pubs)</li>\n<li>Debian (dpkg)</li>\n<li>Dotnet (deps.json)</li>\n<li>Objective-C (cocoapods)</li>\n<li>Go (go.mod, Go binaries)</li>\n<li>Haskell (cabal, stack)</li>\n<li>Java (jar, ear, war, par, sar)</li>\n<li>JavaScript (npm, yarn)</li>\n<li>Jenkins Plugins (jpi, hpi)</li>\n<li>PHP (composer)</li>\n<li>Python (wheel, egg, poetry, requirements.txt)</li>\n<li>Red Hat (rpm)</li>\n<li>Ruby (gem)</li>\n<li>Rust (cargo.lock)</li>\n<li>Swift (cocoapods)</li>\n</ul>\n<h2 id=\"0x05Quickstart\"><a href=\"#0x05Quickstart\" class=\"headerlink\" title=\"0x05Quickstart\"></a>0x05Quickstart</h2><h3 id=\"require\"><a href=\"#require\" class=\"headerlink\" title=\"require\"></a>require</h3><h3 id=\"install\"><a href=\"#install\" class=\"headerlink\" title=\"install\"></a>install</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># linux\ncurl -sSfL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;anchore&#x2F;syft&#x2F;main&#x2F;install.sh | sh -s -- -b &#x2F;usr&#x2F;local&#x2F;bin\n# macos\nbrew tap anchore&#x2F;syft\nbrew install syft\n</code></pre>\n\n\n<h3 id=\"进阶-jenkins集成\"><a href=\"#进阶-jenkins集成\" class=\"headerlink\" title=\"进阶-jenkins集成\"></a>进阶-jenkins集成</h3><h4 id=\"install-docker\"><a href=\"#install-docker\" class=\"headerlink\" title=\"install docker\"></a>install docker</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo apt-get install docker.io -y\nsudo systemctl enable docker\nsudo systemctl start docker\nsudo usermod -aG docker $USER</code></pre>\n<h4 id=\"deploy-jenkins-via-docker\"><a href=\"#deploy-jenkins-via-docker\" class=\"headerlink\" title=\"deploy jenkins via docker\"></a>deploy jenkins via docker</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker run -u root -d --name jenkins --rm -p 8080:8080 -p 50000:50000 -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock -v &#x2F;tmp&#x2F;jenkins-data:&#x2F;var&#x2F;jenkins_home jenkinsci&#x2F;blueocean</code></pre>\n<h4 id=\"install-syft-amp-grype\"><a href=\"#install-syft-amp-grype\" class=\"headerlink\" title=\"install syft &amp; grype\"></a>install syft &amp; grype</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@tvy-base-worker-02 ~]# docker exec 1c5a bash -c &#39;curl -sSfL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;anchore&#x2F;syft&#x2F;main&#x2F;install.sh | sh -s -- -b &#x2F;usr&#x2F;local&#x2F;bin&#39;\n[root@tvy-base-worker-02 ~]# docker exec 1c5a bash -c &#39;curl -sSfL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;anchore&#x2F;grype&#x2F;main&#x2F;install.sh | sh -s -- -b &#x2F;usr&#x2F;local&#x2F;bin&#39;</code></pre>\n<h4 id=\"Generating-SBOM\"><a href=\"#Generating-SBOM\" class=\"headerlink\" title=\"Generating SBOM\"></a>Generating SBOM</h4><ul>\n<li>Definition – Pipeline script from SCM</li>\n<li>SCM – Git</li>\n<li>Repository URL – <a href=\"https://github.com/pvnovarese/syft-sbom-demo\">https://github.com/pvnovarese/syft-sbom-demo</a> (although you can use any GitHub repository for this demo).</li>\n</ul>\n<h4 id=\"publish-sbom-to-dependency-track\"><a href=\"#publish-sbom-to-dependency-track\" class=\"headerlink\" title=\"publish sbom to dependency-track\"></a>publish sbom to dependency-track</h4><p><strong>use format CycloneDX 1.4 XML publish DT, just like docker sbom</strong><br>![[docker镜像安全的检查#Docker SBOM]]</p>\n<h4 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h4><ul>\n<li>文档<a href=\"https://thenewstack.io/give-jenkins-a-software-bill-of-materials-with-syft/\">give-jenkins-a-software-bill-of-materials-with-syft&#x2F;</a></li>\n<li>DEMO<a href=\"https://github.com/pvnovarese/jenkins-syft-demo\">jenkins-syft-demo</a></li>\n</ul>\n<h2 id=\"0x06使用说明\"><a href=\"#0x06使用说明\" class=\"headerlink\" title=\"0x06使用说明\"></a>0x06使用说明</h2><h3 id=\"Generating-SBOM-1\"><a href=\"#Generating-SBOM-1\" class=\"headerlink\" title=\"Generating SBOM\"></a>Generating SBOM</h3><p>To generate an SBOM for a container image:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">syft &lt;image&gt;\n# 上面的输出只包括在容器中可见的软件(即图像的压缩表示)。为了在 SBOM 中包含来自所有图像层的软件，不管它在最终图像中是否存在，添加参数如下\nsyft &lt;image&gt; --scope all-layers</code></pre>\n<p>Syft 对不同来源生产SBOM</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># catalog a container image archive (from the result of &#96;docker image save ...&#96;, &#96;podman save ...&#96;, or &#96;skopeo copy&#96; commands)\nsyft path&#x2F;to&#x2F;image.tar\n# catalog a directory\nsyft path&#x2F;to&#x2F;dir</code></pre>\n<p>Sources can be explicitly provided with a scheme:</p>\n<pre class=\"line-numbers language-markdown\" data-language=\"markdown\"><code class=\"language-markdown\">docker:yourrepo&#x2F;yourimage:tag            use images from the Docker daemon\npodman:yourrepo&#x2F;yourimage:tag            use images from the Podman daemon\ndocker-archive:path&#x2F;to&#x2F;yourimage.tar     use a tarball from disk for archives created from &quot;docker save&quot;\noci-archive:path&#x2F;to&#x2F;yourimage.tar        use a tarball from disk for OCI archives (from Skopeo or otherwise)\noci-dir:path&#x2F;to&#x2F;yourimage                read directly from a path on disk for OCI layout directories (from Skopeo or otherwise)\nsingularity:path&#x2F;to&#x2F;yourimage.sif        read directly from a Singularity Image Format (SIF) container on disk\ndir:path&#x2F;to&#x2F;yourproject                  read directly from a path on disk (any directory)\nfile:path&#x2F;to&#x2F;yourproject&#x2F;file            read directly from a path on disk (any single file)\nregistry:yourrepo&#x2F;yourimage:tag          pull image directly from a registry (no container runtime required)</code></pre>\n<h3 id=\"output-formats\"><a href=\"#output-formats\" class=\"headerlink\" title=\"output formats\"></a>output formats</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">syft &lt;image&gt; -o &lt;format&gt;</code></pre>\n<p><strong>支持的格式</strong></p>\n<ul>\n<li><code>json</code>: Use this to get as much information out of Syft as possible!</li>\n<li><code>text</code>: A row-oriented, human-and-machine-friendly output.</li>\n<li><code>cyclonedx-xml</code>: A XML report conforming to the <a href=\"https://cyclonedx.org/specification/overview/\">CycloneDX 1.4 specification</a>.</li>\n<li><code>cyclonedx-json</code>: A JSON report conforming to the <a href=\"https://cyclonedx.org/specification/overview/\">CycloneDX 1.4 specification</a>.</li>\n<li><code>spdx-tag-value</code>: A tag-value formatted report conforming to the <a href=\"https://spdx.github.io/spdx-spec/\">SPDX 2.2 specification</a>.</li>\n<li><code>spdx-json</code>: A JSON report conforming to the <a href=\"https://github.com/spdx/spdx-spec/blob/v2.2/schemas/spdx-schema.json\">SPDX 2.2 JSON Schema</a>.</li>\n<li><code>github</code>: A JSON report conforming to GitHub’s dependency snapshot format.</li>\n<li><code>table</code>: A columnar summary (default).</li>\n<li><code>template</code>: Lets the user specify the output format. See <a href=\"https://github.com/anchore/syft#using-templates\">“Using templates”</a> below.</li>\n</ul>\n<h3 id=\"Private-Registry-Authentication\"><a href=\"#Private-Registry-Authentication\" class=\"headerlink\" title=\"Private Registry Authentication\"></a>Private Registry Authentication</h3><h4 id=\"Local-Docker-Credentials\"><a href=\"#Local-Docker-Credentials\" class=\"headerlink\" title=\"Local Docker Credentials\"></a>Local Docker Credentials</h4><p><img src=\"http://img.moses.wang/new/20221026170442.png\"></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker run -v .&#x2F;config.json:&#x2F;config&#x2F;config.json -e &quot;DOCKER_CONFIG&#x3D;&#x2F;config&quot; anchore&#x2F;syft:latest  &lt;private_image&gt;</code></pre>\n<h4 id=\"Docker-Credentials-in-Kubernetes\"><a href=\"#Docker-Credentials-in-Kubernetes\" class=\"headerlink\" title=\"Docker Credentials in Kubernetes\"></a>Docker Credentials in Kubernetes</h4><ol>\n<li>creat secret<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"># secret.yaml\n\napiVersion: v1\nkind: Secret\nmetadata:\n  name: registry-config\n  namespace: syft\ndata:\n  config.json: &lt;base64 encoded config.json&gt;</code></pre></li>\n<li>creat pod <pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\">apiVersion: v1\nkind: Pod\nmetadata:\n  name: syft-k8s-usage\nspec:\n  containers:\n    - image: anchore&#x2F;syft:latest\n      name: syft-private-registry-demo\n      env:\n        - name: DOCKER_CONFIG\n          value: &#x2F;config\n      volumeMounts:\n      - mountPath: &#x2F;config\n        name: registry-config\n        readOnly: true\n      args:\n        - &lt;private_image&gt;\n  volumes:\n  - name: registry-config\n    secret:\n      secretName: registry-config</code></pre></li>\n<li>The user can now run <code>kubectl logs syft-private-registry-demo</code>. The logs should show the Syft analysis for the <code>&lt;private_image&gt;</code> provided in the pod configuration.</li>\n</ol>\n<h3 id=\"可信镜像\"><a href=\"#可信镜像\" class=\"headerlink\" title=\"可信镜像\"></a>可信镜像</h3><p>略（支持，但尚属于试验阶段）</p>\n<h2 id=\"0x07应用场景\"><a href=\"#0x07应用场景\" class=\"headerlink\" title=\"0x07应用场景\"></a>0x07应用场景</h2><ul>\n<li>单一镜像安全扫描，经过安全扫描的镜像作为可信镜像</li>\n<li>镜像生成软件供应链清单</li>\n<li>集成到CI&#x2F;CD中梳理容器镜像中的资产信息（包括应用程序的二进制文件以及程序的执行环境和依赖。）：软件（操作系统包管理器如yum、apt和应用程序包管理器maven）版本、漏洞、最新版、风险值等。</li>\n</ul>\n","text":"syft0x01简介syftGitHub about：CLI tool and library for generating a Software Bill of Materials from container images and filesystems其他信息 项目由anc...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"软件供应链安全","slug":"软件供应链安全","count":26,"path":"api/categories/软件供应链安全.json"}],"tags":[{"name":"SCA","slug":"SCA","count":15,"path":"api/tags/SCA.json"},{"name":"软件供应链安全","slug":"软件供应链安全","count":11,"path":"api/tags/软件供应链安全.json"},{"name":"镜像依赖分析","slug":"镜像依赖分析","count":1,"path":"api/tags/镜像依赖分析.json"},{"name":"docker-SBOM","slug":"docker-SBOM","count":1,"path":"api/tags/docker-SBOM.json"},{"name":"容器镜像安全","slug":"容器镜像安全","count":2,"path":"api/tags/容器镜像安全.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#syft\"><span class=\"toc-text\">syft</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">0x01简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02%E6%9E%B6%E6%9E%84%E5%9B%BE\"><span class=\"toc-text\">0x02架构图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03%E6%A0%B8%E5%BF%83%E8%83%BD%E5%8A%9BFeatures\"><span class=\"toc-text\">0x03核心能力Features</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04%E6%94%AF%E6%8C%81%E7%94%9F%E6%80%81\"><span class=\"toc-text\">0x04支持生态</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x05Quickstart\"><span class=\"toc-text\">0x05Quickstart</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#require\"><span class=\"toc-text\">require</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#install\"><span class=\"toc-text\">install</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E9%98%B6-jenkins%E9%9B%86%E6%88%90\"><span class=\"toc-text\">进阶-jenkins集成</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#install-docker\"><span class=\"toc-text\">install docker</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#deploy-jenkins-via-docker\"><span class=\"toc-text\">deploy jenkins via docker</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#install-syft-amp-grype\"><span class=\"toc-text\">install syft &amp; grype</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Generating-SBOM\"><span class=\"toc-text\">Generating SBOM</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#publish-sbom-to-dependency-track\"><span class=\"toc-text\">publish sbom to dependency-track</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x06%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E\"><span class=\"toc-text\">0x06使用说明</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Generating-SBOM-1\"><span class=\"toc-text\">Generating SBOM</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#output-formats\"><span class=\"toc-text\">output formats</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Private-Registry-Authentication\"><span class=\"toc-text\">Private Registry Authentication</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Local-Docker-Credentials\"><span class=\"toc-text\">Local Docker Credentials</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Docker-Credentials-in-Kubernetes\"><span class=\"toc-text\">Docker Credentials in Kubernetes</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E4%BF%A1%E9%95%9C%E5%83%8F\"><span class=\"toc-text\">可信镜像</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x07%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">0x07应用场景</span></a></li></ol></li></ol>","author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"容器镜像构建与分发的技术实践与安全思索","uid":"d761d3905282bd119994c0c8a6e0235c","slug":"容器镜像构建与分发的技术实践与安全思索","date":"2022-09-01T06:34:00.000Z","updated":"2022-10-27T02:20:09.450Z","comments":true,"path":"api/articles/容器镜像构建与分发的技术实践与安全思索.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/244766/beach-themed-backgrounds-244766-2113386-274623.png","text":"容器镜像构建与分发的技术实践与安全思索BackendDocker 能引爆容器，主要原因是它带来了镜像和镜像分发技术。 容器运行时是 Kubernetes 平台的基础组件，镜像则是容器的静态文件，容器由镜像创建。在 Kubernetes 平台中，我们交付的所有应用，最终都是以镜像形...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"Cloud-Native-Security","slug":"Cloud-Native-Security","count":12,"path":"api/categories/Cloud-Native-Security.json"}],"tags":[{"name":"容器镜像安全","slug":"容器镜像安全","count":2,"path":"api/tags/容器镜像安全.json"},{"name":"Distroless","slug":"Distroless","count":1,"path":"api/tags/Distroless.json"},{"name":"buidlkit","slug":"buidlkit","count":1,"path":"api/tags/buidlkit.json"},{"name":"CNB","slug":"CNB","count":1,"path":"api/tags/CNB.json"}],"author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Docker镜像安全检查","uid":"e9d7711be30d2abb5d40d409afb44a29","slug":"docker镜像安全的检查","date":"2022-08-31T03:46:00.000Z","updated":"2022-10-27T02:21:50.625Z","comments":true,"path":"api/articles/docker镜像安全的检查.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/244766/beach-themed-backgrounds-244766-2113307-9026960.png","text":"docker镜像安全的检查官方工具Docker ScanVulnerability scanning for Docker local images | Docker Documentation install ubuntuapt-get update &amp;&amp; ap...","link":"","photos":[],"count_time":{"symbolsCount":"25k","symbolsTime":"23 mins."},"categories":[{"name":"Cloud-Native-Security","slug":"Cloud-Native-Security","count":12,"path":"api/categories/Cloud-Native-Security.json"}],"tags":[{"name":"镜像安全","slug":"镜像安全","count":3,"path":"api/tags/镜像安全.json"},{"name":"docker","slug":"docker","count":1,"path":"api/tags/docker.json"},{"name":"云原生安全","slug":"云原生安全","count":6,"path":"api/tags/云原生安全.json"}],"author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}