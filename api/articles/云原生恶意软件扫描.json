{"title":"云原生恶意软件扫描","uid":"de32a1a96e94010ffce347f9070bfa2b","slug":"云原生恶意软件扫描","date":"2022-07-08T03:50:32.192Z","updated":"2022-10-27T02:12:38.512Z","comments":true,"path":"api/articles/云原生恶意软件扫描.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/244772/yellow-flower-field-background-244772-1997945-8799134.png","content":"<h1 id=\"云原生恶意软件扫描\"><a href=\"#云原生恶意软件扫描\" class=\"headerlink\" title=\"云原生恶意软件扫描\"></a>云原生恶意软件扫描</h1><h2 id=\"0x01简介\"><a href=\"#0x01简介\" class=\"headerlink\" title=\"0x01简介\"></a>0x01简介</h2><p><a href=\"https://github.com/deepfence/YaRadare\">YaRadare</a>可以对容器镜像、正在运行的docker容器和系统文件中找到恶意软甲威胁的事件。使用 <a href=\"https://github.com/deepfence/yara-rules\">YARA ruleset</a>识别资源匹配恶意软件签名。</p>\n<h2 id=\"0x02架构图\"><a href=\"#0x02架构图\" class=\"headerlink\" title=\"0x02架构图\"></a>0x02架构图</h2><p>略</p>\n<h2 id=\"0x03核心能力\"><a href=\"#0x03核心能力\" class=\"headerlink\" title=\"0x03核心能力\"></a>0x03核心能力</h2><ul>\n<li><strong>At rest</strong>: scan local container images, for example, before they are deployed, to verify they do not contain malware</li>\n<li><strong>At runtime</strong>: scan running docker containers, for example, if you observe unusual network traffic or CPU activity</li>\n<li><strong>Against filesystems</strong>: at any time, YaRadare can scan a local filesystems for indicators of compromise</li>\n</ul>\n<p>Key capabilities:</p>\n<ul>\n<li>Scan running and at-rest containers, and filesystems</li>\n<li>Run anywhere: highly-portable, docker container form factor or universal GO binary <a href=\"https://github.com/deepfence/YaRadare/issues/15\">work in progress</a></li>\n<li>Designed for automation: easy-to-deploy, easy-to-parse JSON output</li>\n</ul>\n<h2 id=\"0x04对比\"><a href=\"#0x04对比\" class=\"headerlink\" title=\"0x04对比\"></a>0x04对比</h2><p>略</p>\n<h2 id=\"0x05Quickstart\"><a href=\"#0x05Quickstart\" class=\"headerlink\" title=\"0x05Quickstart\"></a>0x05Quickstart</h2><h3 id=\"build-yaRadre\"><a href=\"#build-yaRadre\" class=\"headerlink\" title=\"build yaRadre\"></a>build yaRadre</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker build --rm&#x3D;true --tag&#x3D;deepfenceio&#x2F;deepfence-yaradare:latest -f Dockerfile .</code></pre>\n\n<h3 id=\"扫描容器镜像\"><a href=\"#扫描容器镜像\" class=\"headerlink\" title=\"扫描容器镜像\"></a>扫描容器镜像</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">\ndocker pull node:latest\n\ndocker run -it --rm --name&#x3D;deepfence-yaradare \\\n    -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \\\n    deepfenceio&#x2F;deepfence-yaradare:latest --image-name node:latest\n\ndocker rmi node:latest</code></pre>\n\n<h3 id=\"扫描运行的容器\"><a href=\"#扫描运行的容器\" class=\"headerlink\" title=\"扫描运行的容器\"></a>扫描运行的容器</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker run -it --rm --name&#x3D;deepfence-yaradare \\\n    -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \\\n    -v &#x2F;:&#x2F;deepfence&#x2F;mnt \\\n    deepfenceio&#x2F;deepfence-yaradare:latest \\\n    --host-mount-path &#x2F;deepfence&#x2F;mnt --container-id 69221b948a73</code></pre>\n\n<h3 id=\"扫描系统文件\"><a href=\"#扫描系统文件\" class=\"headerlink\" title=\"扫描系统文件\"></a>扫描系统文件</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">docker run -it --rm --name&#x3D;deepfence-yaradare \\\n    -v ~&#x2F;src&#x2F;YARA-RULES:&#x2F;tmp&#x2F;YARA-RULES \\\n    deepfenceio&#x2F;deepfence-yaradare:latest \\\n    --local &#x2F;tmp&#x2F;YARA-RULES --host-mount-path &#x2F;tmp&#x2F;YARA-RULES</code></pre>\n\n","text":"云原生恶意软件扫描0x01简介YaRadare可以对容器镜像、正在运行的docker容器和系统文件中找到恶意软甲威胁的事件。使用 YARA ruleset识别资源匹配恶意软件签名。 0x02架构图略 0x03核心能力 At rest: scan local container i...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Cloud-Native-Security","slug":"Cloud-Native-Security","count":12,"path":"api/categories/Cloud-Native-Security.json"}],"tags":[{"name":"恶意文件软件扫描","slug":"恶意文件软件扫描","count":1,"path":"api/tags/恶意文件软件扫描.json"},{"name":"DevSecOps","slug":"DevSecOps","count":3,"path":"api/tags/DevSecOps.json"},{"name":"yara-scanner","slug":"yara-scanner","count":1,"path":"api/tags/yara-scanner.json"},{"name":"threat-hunting","slug":"threat-hunting","count":1,"path":"api/tags/threat-hunting.json"},{"name":"ioc","slug":"ioc","count":1,"path":"api/tags/ioc.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%91%E5%8E%9F%E7%94%9F%E6%81%B6%E6%84%8F%E8%BD%AF%E4%BB%B6%E6%89%AB%E6%8F%8F\"><span class=\"toc-text\">云原生恶意软件扫描</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x01%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">0x01简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x02%E6%9E%B6%E6%9E%84%E5%9B%BE\"><span class=\"toc-text\">0x02架构图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x03%E6%A0%B8%E5%BF%83%E8%83%BD%E5%8A%9B\"><span class=\"toc-text\">0x03核心能力</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x04%E5%AF%B9%E6%AF%94\"><span class=\"toc-text\">0x04对比</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#0x05Quickstart\"><span class=\"toc-text\">0x05Quickstart</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#build-yaRadre\"><span class=\"toc-text\">build yaRadre</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%AB%E6%8F%8F%E5%AE%B9%E5%99%A8%E9%95%9C%E5%83%8F\"><span class=\"toc-text\">扫描容器镜像</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%AB%E6%8F%8F%E8%BF%90%E8%A1%8C%E7%9A%84%E5%AE%B9%E5%99%A8\"><span class=\"toc-text\">扫描运行的容器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%89%AB%E6%8F%8F%E7%B3%BB%E7%BB%9F%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">扫描系统文件</span></a></li></ol></li></ol></li></ol>","author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"新技术调研可信云原生软件供应链-Grafeas和Kritis","uid":"82f3f8f0afc02942b9512346798bab47","slug":"可信云原生软件供应链-Grafeas和kritis项目调研","date":"2022-07-12T03:19:54.198Z","updated":"2022-10-26T08:01:49.645Z","comments":true,"path":"api/articles/可信云原生软件供应链-Grafeas和kritis项目调研.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159447/abstract-ink-wallpapers-159447-4036-9280805.png","text":"可信云原生软件供应链-Grafeas和kritis项目调研0x01背景在Google内部运行了大量的容器，每周需要部署超过20亿次容器(2019年5月数据， Software Supply Chain with Grafeas and Kritis ，我理解是每天需要创建3亿次容...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"软件供应链安全","slug":"软件供应链安全","count":26,"path":"api/categories/软件供应链安全.json"}],"tags":[{"name":"软件供应链安全","slug":"软件供应链安全","count":11,"path":"api/tags/软件供应链安全.json"},{"name":"云原生安全","slug":"云原生安全","count":6,"path":"api/tags/云原生安全.json"},{"name":"新技术调研","slug":"新技术调研","count":1,"path":"api/tags/新技术调研.json"}],"author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"概念梳理-软件供应链清单SBOM","uid":"ff9f99b916729c965fcce33c1ab740e6","slug":"软件物料清单SBOM","date":"2022-06-29T09:33:00.000Z","updated":"2022-10-26T08:03:31.007Z","comments":true,"path":"api/articles/软件物料清单SBOM.json","keywords":null,"cover":"https://gtwallpaper.org/sites/default/files/wallpaper/159447/abstract-ink-wallpapers-159447-4039-2362656.png","text":"概述和背景软件供应链安全始于对关键环节的可见性，企业需要为每个应用程序持续构建详细的 SBOM（Software Bill of Material，软件物料清单），从而全面洞察每个应用软件的组件情况。SBOM 是描述软件包依赖树的一系列元数据，包括供应商、版本号和组件名称等多项关...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"软件供应链安全","slug":"软件供应链安全","count":26,"path":"api/categories/软件供应链安全.json"}],"tags":[{"name":"SCA","slug":"SCA","count":15,"path":"api/tags/SCA.json"},{"name":"SBOM","slug":"SBOM","count":5,"path":"api/tags/SBOM.json"}],"author":{"name":"Moses","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}